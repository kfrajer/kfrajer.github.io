[{"content":"Installing Docker in Windows Subsystem Linux (WSL) NOTES  After ssummer 2020, you need to have WSL2 which is made available for Windows 10 Home edition It is recommended to upgrade to Windows 10 Pro In \u0026ldquo;Turn Windows features on and off\u0026rdquo;, check \u0026ldquo;Windows Hypervisor Platform\u0026rdquo; To be confirmed, check \u0026ldquo;Hyper-V\u0026rdquo;? Currently working but this is not checked. To investigate\u0026hellip; Finally, install \u0026ldquo;Docker Destop\u0026rdquo; and ensure the docker-machine is up and running. Enable WSL2 support and add the following line in your Linux distro: export DOCKER_HOST=unix:///var/run/docker.sock  Instructions $ sudo apt install apt-transport-https ca-certificates curl software-properties-common\n$ sudo apt-get remove docker docker-engine docker.io containerd runc\n$ sudo apt-get update\n$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n$ sudo add-apt-repository \u0026ldquo;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\u0026rdquo;\n$ sudo add-apt-repository \u0026ldquo;deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable\u0026rdquo;\n$ sudo apt-get update\n$ apt-cache policy docker-ce\n$ sudo apt install docker-ce\n$ apt list -a docker-ce\n$ echo $USER\n$ sudo usermod -aG docker $USER\nLog out and back in [OR] su - ${USER}\n$ id -nG ## You should be in the docker group\n$ sudo usermod -aG docker username ## Optional\n$ sudo nano /usr/local/sbin/start_docker.sh\n #!/usr/bin/env bash\nsudo cgroupfs-mount\nsudo service docker start\n $ sudo chmod +x /usr/local/sbin/start_docker.sh\n$ sudo chmod 755 /usr/local/sbin/start_docker.sh\n$ sudo nano /etc/sudoers\n {your username here} ALL=(ALL:ALL) NOPASSWD: /bin/sh /usr/local/sbin/start_docker.sh ## User echo $USER for username\n$ /bin/sh /usr/local/sbin/start_docker.sh\n $ sudo systemctl status docker [OR] sudo service docker status\nREFERENCES  INTRO to Docker Docker Running Seamlessly in Windows Subsystem Linux  ","description":"Installing Docker in Windows Subsystem Linux","id":3,"section":"development","tags":["Docker","WSL","Cheatsheet"],"title":"Setup Docker in Wsl","uri":"http://kfrajer.github.io/en/development/setup-docker-in-wsl/"},{"content":"Memory analysis using docker  Reference: https://github.com/CppMtl/Meetups/tree/master/2020/2020-02-27%20%5BGabriel%20Aubut-Lussier%5D%20Memory%20analysis  Roadmap 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58  docker run --rm -it ubuntu ls /proc ls /proc/1 bash cat /proc/1/stack docker run --privileged --rm -it ubuntu cat /proc/1/stack less /proc/1/smaps apt-get install less less /proc/1/maps Virtual memory Different binary sections Different permissions [heap] Shared libraries (libc, terminfo, dynamic linker) Anonymous zones [stack] [vvar], [vdso], [vsyscall] less /proc/1/smaps Rss Pss Shared_* Private_* VmFlags less /proc/1/smaps_rollup less /proc/1/map_files/* less /proc/1/oom_score less /proc/1/status Vm* pushd /home/01-programme-vide g++ main.cpp -o 01 gdb 01 break _exit run ps -a | grep 01 less /proc/\u0026lt;pid\u0026gt;/maps popd pushd /home/02-programme-new g++ main.cpp -o 02 gdb 02 break _exit run ps -a | grep 02 less /proc/\u0026lt;pid\u0026gt;/maps Arena popd pushd /home/03-gros-new g++ main.cpp -o 03 -g gdb 03 break f run finish ps -a | grep 03 less /proc/\u0026lt;pid\u0026gt;/maps Zone anonyme popd strace -e brk -k strace -e mmap -k   main-01.cpp 1 2 3 4  int main() { return 42; }   main-02.cpp 1 2 3 4  int main() { return *new int{42}; }   main-03.cpp 1 2 3 4 5 6 7 8 9 10  char* f() { return new char[128*1024 - 15]; } int main() { f(); return 42; }   main-04.cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  #include \u0026lt;vector\u0026gt; void f() { std::vector\u0026lt;std::vector\u0026lt;char\u0026gt;\u0026gt; v; const int n = 10; v.reserve(n); for (int i = 0; i \u0026lt; n; ++i) { v.emplace_back(); v.back().reserve(127 * 1024); } } int main() { std::vector\u0026lt;char\u0026gt; v; v.reserve(127*1024); f(); }   ","description":"Demonstration of mem analysis by C+++ Montreal - 2020","id":4,"section":"development","tags":["docker","c++"],"title":"Docker Cpp Memory Demo","uri":"http://kfrajer.github.io/en/development/docker-cpp-mem-demo/"},{"content":"Git flow  Set git for the first time:  E-mail, name, crlf line termination handling git init git config \u0026ndash;global user.name \u0026ldquo;kfrajer\u0026rdquo; git config \u0026ndash;global user.email krisfrajer@gmail.com git config \u0026ndash;global core.autocrlf true git config \u0026ndash;global merge.tool meld git config \u0026ndash;global mergetool.meld.cmd \u0026ldquo;meld $LOCAL $MERGED $REMOTE \u0026ndash;output $MERGED\u0026rdquo; Set git token   git clone repo(s) locally Create a branch with named either feature(s)/{feature-name}, bugfix/{issue-name} or mayor/{name}  git checkout -b {purpose}/{name}   Perform changes, add unit/system/integration tests Commit often Push upstream to origin. For a branch not in origin yet, you need to push providing the branch name:  git push \u0026ndash;set-upstream origin your_branch_name If CI exist, this operation should trigger running all tests This push can be done multiple times as long as the branch is not merged against master   Any additional/new code and commits can be pushed to this branch while in wip When the feature is ready, or to start an early review, create a merge request (MR)  Any additional commit will automatically update your MR You can start MR anytime even if feature is not yet done. Add the WIP(work in progress) header so the branch is not merged by accident in the case that is not ready to be merged Add a one line header starting with either [FEATURE] or [BUGFIX] follow by a short descriptive title, an empty line and a body describing details of the MR. It is useful to have a template. Tick delete branch and squash commit (in case of multiple commits) Address and resolve all threads from the multiple discussions from the reviewers For any code corrections, additions or deletions, perform them locally, commit and push them upstream to this branch   Merge your feature/bug fix after approval is granted.  If squash commits is needed and was enabled, you need to update the \u0026ldquo;squash commits\u0026rdquo; commit message This will trigger running the CI on the master with the new changes. Only merge after configuration changes are done (in case they are needed for this MR)   After a successful merge, master is tagged with semantic versioning. Deploy master  Deploy into dev environment Perform sanity test (advanced integration test)   Deploy to other environments (User aceptance testing, QA, prod)  To be discussed  Resolving merge conflicts Pull rebasing before pushing upstream  ","description":"Git flow using feature branch","id":5,"section":"development","tags":["Git","Commands","Cheatsheet"],"title":"Git Flow - Feature branch","uri":"http://kfrajer.github.io/en/development/git-flow-fbranch/"},{"content":".DEFAULT_GOAL := build\n.PHONY: clean\nCTIMESTAMP=$(shell date +%Y%m%d%H%M%S)\nMAIN=newsletter-prep\nDF_ORIGINAL=dockerfiles/df-original/Dockerfile\nDF_STAGES=dockerfiles/df-stages/Dockerfile\nDC_DF_FILE=dockerfiles/dockercompose/Dockerfile\nDC_MAIN_FILE=dockerfiles/dockercompose/docker-compose.yml\nLOGFILE=log-backups.log\nTRASH=Trash/\ninfo:\n@ echo \u0026ldquo;Build and runs report generator (code name newsletter\u0026rdquo;\nsafebackup: clean\n$(shell echo \u0026ldquo;:::::Dockerfile_$(CTIMESTAMP)\u0026rdquo; \u0026raquo; $(TRASH)/$(LOGFILE))\n@echo \u0026ldquo;:::::Dockerfile_$CTIMESTAMP\u0026rdquo;\n-@test -f Dockerfile \u0026amp;\u0026amp; $(shell head -n 3 Dockerfile \u0026raquo; $(TRASH)/$(LOGFILE))\n-@test -f Dockerfile \u0026amp;\u0026amp; $(shell [ ! -s Dockerfile ] \u0026amp;\u0026amp; echo \u0026quot; (Dockerfile was empty)\u0026rdquo; \u0026raquo; $(TRASH)/$(LOGFILE))\n-@test -f Dockerfile \u0026amp;\u0026amp; cp -vf Dockerfile $(TRASH)/Dockerfile_$(CTIMESTAMP) || true\n-@test -f docker-compose.yml \u0026amp;\u0026amp; cp -vf docker-compose.yml $(TRASH)/docker-compose_$(CTIMESTAMP).yml || true\nsafeori: safebackup\n-@test -f Dockerfile \u0026amp;\u0026amp; mv Dockerfile $(DF_ORIGINAL)\nsafestages: safebackup\n-@test -f Dockerfile \u0026amp;\u0026amp; mv Dockerfile $(DF_STAGES)\nsafedc: safebackup\n-@test -f Dockerfile \u0026amp;\u0026amp; mv Dockerfile $(DC_DF_FILE)\n-@test -f docker-compose.yml \u0026amp;\u0026amp; mv docker-compose.yml $(DC_MAIN_FILE)\ncheckifsafe:\n-@test -f Dockerfile \u0026amp;\u0026amp; echo \u0026ldquo;!!!!! WARNING: Dockerfile exist.\u0026rdquo; \u0026amp;\u0026amp; echo \u0026ldquo;!!!!! WARNING: You need to save proper session first\u0026rdquo;\nori: checkifsafe\n-@test ! -f Dockerfile \u0026amp;\u0026amp; cp $(DF_ORIGINAL) .\nstages: checkifsafe\n-@test ! -f Dockerfile \u0026amp;\u0026amp; cp $(DF_STAGES) .\ndc: checkifsafe\n-@test ! -f Dockerfile \u0026amp;\u0026amp; cp $(DC_DF_FILE) .\n-@test ! -f docker-compose.yml \u0026amp;\u0026amp; cp $(DC_MAIN_FILE) .\nbuild: clean\nCGO_ENABLED=0; GOOS=linux GOARCH=amd64 go build -ldflags \u0026lsquo;-s -w\u0026rsquo; -v -o ./pkg/\u0026hellip;\nchmod +x $(MAIN)\nSTATICALLY compiled binary: RUN CGO_ENABLED=0 go get -a -ldflags \u0026lsquo;-s\u0026rsquo; github.com/adriaandejonge/helloworld run: build\n./$(MAIN)\ntar:\ntar -cvf ~/backup_$(CTIMESTAMP).tar *\necho \u0026ldquo;Backup created at ~/backup_$(CTIMESTAMP).tar\u0026rdquo;\nclean:\n@ echo \u0026ldquo;Cleaning up\u0026hellip;\u0026rdquo;\nmkdir -p $(TRASH)\nmv -f $(MAIN) $(TRASH) || true\nFILES=\u0026quot;$(shell find -type f -name \u0026lsquo;*.*~\u0026rsquo; -o -name \u0026lsquo;*~\u0026rsquo;)\u0026quot;; mv -f $$FILES $(TRASH) || true\n@ echo \u0026ldquo;Cleaning up\u0026hellip; DONE\u0026rdquo;\ntest:\n@echo \u0026ldquo;CTIMESTAMP is $(CTIMESTAMP)\u0026rdquo;\n-@test -f Dockerfile \u0026amp;\u0026amp; echo \u0026ldquo;File does exist\u0026rdquo;\n-@test ! -f Dockerfile \u0026amp;\u0026amp; echo \u0026ldquo;File does NOT exist $CTIMESTAMP\u0026rdquo;\n","description":"Makefile demo - Nesletter project","id":6,"section":"templates","tags":["c++","make","Makefile"],"title":"Makefile","uri":"http://kfrajer.github.io/en/templates/makefile/"},{"content":"############### # FROM buildpack-deps:buster-curl as certGetter ## Copy from src to dest, load to base and outputed in master ENV SRC_CERT=ORGANIZATION \\ DEST_CERT=/usr/share/ca-certificates/ORGANIZATION \\ BASE_CERT=/etc/ca-certificates.conf \\ MASTER_CERT_FILE=/etc/ssl/certs WORKDIR app/ COPY . . RUN mkdir -p $DEST_CERT \u0026amp;\u0026amp; cp -f $SRC_CERT/* $DEST_CERT/ \u0026amp;\u0026amp; \\ for i in `find ${SRC_CERT} -type f -name \u0026quot;*.crt\u0026quot;`; do echo $i \u0026gt;\u0026gt; $BASE_CERT; echo \u0026quot;Loading $i into $BASE_CERT\u0026quot;; done \u0026amp;\u0026amp; \\ echo \u0026quot;Calling update-ca-certificates...\u0026quot; \u0026amp;\u0026amp; update-ca-certificates ONBUILD RUN echo -e \u0026quot;\\nFinish executing loading\\n\\nCertGetter\\n\\nNext step...\\n\u0026quot; ############### # FROM buildpack-deps:buster-curl as printingPressGetter ENV PRINTING_PRESS_VERSION=\u0026quot;v0.2.0\u0026quot; ENV PRINTINGPRESSFILE=printing-press_\u0026quot;${PRINTING_PRESS_VERSION}\u0026quot;_linux \\ MASTER_PRINTINGPRESS=/usr/local/bin/printing-press RUN curl -O https://artifactory.ORGANIZATION.org/generic/ORGANIZATIONSUB/printing-press/${PRINTINGPRESSFILE} \u0026amp;\u0026amp; \\ mv -v ./${PRINTINGPRESSFILE} $MASTER_PRINTINGPRESS \u0026amp;\u0026amp; \\ chmod +x $MASTER_PRINTINGPRESS ONBUILD RUN echo -e \u0026quot;\\nFinish executing loading\\n\\nPrintingPressGetter\\n\\nNext step...\\n\u0026quot; ############### # FROM golang:1-alpine as buildStage ENV APPROOT=$GOPATH/app WORKDIR $APPROOT #COPY Dockerfile Makefile go.* pkg scripts $APPROOT COPY . $APPROOT #RUN chmod +x scripts/report-gen-cmd.sh \u0026amp;\u0026amp; make build ENTRYPOINT [\u0026quot;scripts/report-gen-cmd.sh\u0026quot;] #ENTRYPOINT [\u0026quot;/bin/bash\u0026quot;] #CMD [\u0026quot;build\u0026quot;] #ENTRYPOINT [\u0026quot;make\u0026quot;] ONBUILD RUN echo -e \u0026quot;\\nFinish executing loading\\n\\nBuildStage:$APPROOT\\n\\nNext step...\\n\u0026quot; ############### # FROM golang:1-alpine #FROM alpine as runtime ENV PATH=/usr/local/bin:/bin:/sbin:$PATH \\ MASTER_PRINTINGPRESS=/usr/local/bin/printing-press \\ MASTER_CERT_FILE=/etc/ssl/certs \\ BINROOT=/app \\ RECIPIENT_EMAIL=\u0026quot;user@example.com\u0026quot; \\ GITLAB_USER_EMAIL=\u0026quot;user@example.com\u0026quot; \\ SEND_EMAIL_FLAG=true #OUTFOLDER=\u0026quot;$BINROOT/publish\u0026quot; \\ #RUN apk update \u0026amp;\u0026amp; apk add --no-cache bash WORKDIR /app COPY . $BINROOT COPY --from=certGetter $MASTER_CERT_FILE/* $MASTER_CERT_FILE/ COPY --from=printingPressGetter $MASTER_PRINTINGPRESS $MASTER_PRINTINGPRESS COPY --from=buildStage /go/bin/newsletter-prep $BINROOT/newsletter-prep ##find . -type f -print0 | xargs -0 -n 1 -P 4 dos2unix RUN for i in `find -type f -name \u0026quot;*.sh\u0026quot; -o -name \u0026quot;*.json\u0026quot;`; do sed -i 's/\\r//g' $i; echo \u0026quot;Removing Windows end of line for : $i\u0026quot;; done \u0026amp;\u0026amp; \\ for i in `find editorial/ -type f -name \u0026quot;*.json\u0026quot;`; do sed -i ':a;N;$!ba;s/\\n/ /g' $i; echo \u0026quot;Removing new line character03 in: $i\u0026quot;; done #ENTRYPOINT [\u0026quot;/bin/bash\u0026quot;] ENTRYPOINT \u0026quot;$BINROOT/newsletter-prep\u0026quot; ","description":"Demo docker multi-stages","id":7,"section":"templates","tags":["docker","build"],"title":"Dockerfile Multistage","uri":"http://kfrajer.github.io/en/templates/docker/dockerfile-multistage/"},{"content":"P5js Template: Loading local p5.js script 1 2 3 4 5 6 7 8  \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/p5@1.0.0/lib/p5.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;sketch.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   P5js Template: Embedded p5.js script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/p5@1.0.0/lib/p5.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; function setup() { createCanvas(400, 400); } function draw() { if (mouseIsPressed) { fill(0); } else { fill(255); } ellipse(mouseX, mouseY, 80, 80); } \u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   P5js Template: Loading a local image 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Fetching image\u0026lt;/title\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/p5@1.0.0/lib/p5.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; //const site = \u0026#39;https://covers.openlibrary.org/b/id/295577-S.jpg\u0026#39;;  const site = \u0026#39;drake2.png\u0026#39;; async function catchImage(){ const res = await fetch(site); const blob = await res.blob(); document.getElementById(\u0026#39;showcase\u0026#39;).src = URL.createObjectURL(blob); } catchImage().catch(error =\u0026gt; { console.log(\u0026#39;ERROR\u0026#39;) console.error(error) }); \u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;img src=\u0026#34;\u0026#34; id=\u0026#34;showcase\u0026#34; /\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   ","description":"Initial p5js template with sources from CDN","id":8,"section":"templates","tags":["Processing","js","Javascript","p5js"],"title":"P5JS HTML Bundle","uri":"http://kfrajer.github.io/en/templates/processing/p5js-html-bundle/"},{"content":"Processing Template for New Sketches 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58  //REFERENCES: //REFERENCES: //REFERENCES:  //INSTRUCTIONS: // *-- // *-- // *-- // *--  //=========================================================================== // IMPORTS:  //=========================================================================== // FINAL FIELDS:  //=========================================================================== // GLOBAL VARIABLES:  //=========================================================================== // PROCESSING DEFAULT FUNCTIONS:  void settings(){ size(400,600); } void setup(){ textAlign(CENTER,CENTER); rectMode(CENTER); fill(255); strokeWeight(2); } void draw(){ background(0); } void keyReleased(){ } void mouseReleased(){ } //=========================================================================== // OTHER FUNCTIONS:    ","description":"Template - Processing Java","id":9,"section":"templates","tags":["Processing","Java","P3"],"title":"Processing-java","uri":"http://kfrajer.github.io/en/templates/processing/processing-java/"},{"content":"Instructions  docker build -t {imageName} . docker run -it \u0026ndash;rm \u0026ndash;mount type=bind,src=/c/Users/C/workspace/out,dst=/app/publish \u0026ndash;name {containerName} {imageName}  Dockerfile content FROM golang:1.14 ENV \\ PRINTING_PRESS_VERSION=\u0026quot;v0.2.0\u0026quot; \\ APPROOT=\u0026quot;/app\u0026quot; \\ OUTFOLDER=\u0026quot;$APPROOT/publish\u0026quot; \\ RECIPIENT_EMAIL=\u0026quot;user@example.com\u0026quot; \\ GITLAB_USER_EMAIL=\u0026quot;user@example.com\u0026quot; \\ SEND_EMAIL_FLAG=true WORKDIR $APPROOT COPY . $APPROOT ##find . -type f -print0 | xargs -0 -n 1 -P 4 dos2unix RUN for i in `find -type f -name \u0026quot;*.sh\u0026quot; -o -name \u0026quot;*.json\u0026quot;`; do sed -i 's/\\r//g' $i; echo \u0026quot;Removing Windows end of line for : $i\u0026quot;; done ##RUN for i in `find editorial/ -type f -name \u0026quot;*.json\u0026quot;`; do sed -i ':a;N;$!ba;s/\\n/ /g' $i; echo \u0026quot;Removing new line character03 in: $i\u0026quot;; done RUN \\ chmod +x scripts/get-template-generator.sh \\ chmod +x scripts/report-gen-cmd.sh \u0026amp;\u0026amp; \\ chmod +x scripts/set-ORGANIZATION-certificates.sh \u0026amp;\u0026amp; \\ scripts/set-ORGANIZATION-certificates.sh \u0026amp;\u0026amp; \\ scripts/get-template-generator.sh ENTRYPOINT [\u0026quot;scripts/report-gen-cmd.sh\u0026quot;] ","description":"Demo dockerfile using GOlang as base image","id":11,"section":"templates","tags":["docker","build"],"title":"Dockerfile sample","uri":"http://kfrajer.github.io/en/templates/docker/dockerfile/"},{"content":"Python Virtual Environment For Linux  virtualenv -v venv --python=/usr/bin/python3 source ./venv/bin/activate  For Windows  python -m pip install --proxy=http://u:p@proxy-svc-name.com:port --upgrade pip pip install --proxy=http://u:p@proxy-svc-name.com:port virtualenv virtualenv -v {envName} --python=c:\\Python37\\python.exe {envName}\\Scripts\\activate\n[…] deactivate doskey /history  ","description":"","id":12,"section":"development","tags":["one","two"],"title":"Python Virtualenv","uri":"http://kfrajer.github.io/en/development/python-virtualenv/"},{"content":"Core JQ commands Doc\u0026rsquo;s main reference: jq Tutorial\nCommands in Docker context  [TBD]  Commands applied to log files  cat {filename} | jq '. | length' : How many entries cat {filename} | jq '. | {name: .appName}' : Displays all appNames in each entry. They are each tagged with name cat {filename} | jq '. | {LEVEL: .logLevel, MSG: .message, EXCEPTION: .exception}' : Demo of multiple mapping cat {filename} | jq '. | select(.exception != null) | {LEVEL: .logLevel, MSG: .message, EXCEPTION: .exception} ' : Selecting demo cat {filename} | jq '. | select(.logLevel == \u0026quot;ERROR\u0026quot;) | {MSG: .message} ' : Selecting demo  ","description":"","id":13,"section":"development","tags":["one","two"],"title":"Jq","uri":"http://kfrajer.github.io/en/development/jq/"},{"content":"Building a Site: Generation\n*) (Why to setup a static site?)[#]\n*) Install HUGO (Binary+add to PATH)\n*) (Preparing emacs HUGO mode)[#]\n*) (First Site: Design Layout)[#]\n*) (Git setup)[#, Ref]\n*) Theme selection\n*) First post!\n*) (Emal setup as a web service)[#]\nBuilding a Site: Deployment\n*) Brand name selection: namechk.com\n*) Web hosting services: GitHub, https://www.nearlyfreespeech.net/, atspace.cc, AWS, Heroku, Digital Ocean (VPS)\nWeb hosting services\nSetting up page hosting using (GitHub)[https://gohugo.io/hosting-and-deployment/hosting-on-github/].\nYou will need to decide if you are hosting a\npage specifically for a project or for a user/organization sie. I am choosing the later.\nThe steps to follow are:\n*) Go to github and register using a valid counter.\n*) Name repo kfrajer.github.io\nBusiness Consideration\n*) Branding and logo\n*) Copyright\n*) Business cards\nWhy to setup a static site?\nHugo\nJekyll (MUO)\nGitHub\nvs. WordPress (MUO, Traversy Media)\nFirst Site: Design Layout\n*) Experience and Personal Interests\n*) Projects\n*) Blog posts\n*) Code Recipes\n*) Reference links\n*) About\n*) Contact\nUnderstanding Licenses\nGPL\nMIT\nHUGO setup details\n*) cd C:/mySandBox/DockerSpace/Hugo/kfrajer-hugo/\no) vist https://github.com/gohugoio/hugo/releases/ and select version for ubuntu/debian, download it.\no) sudo apt install /c/Users/C/Downloads/hugo_0.71.1_Linux-64bit.deb\no) hugo version ## v0.71.1\n*) mkdir kfrajer.github.io\n*) hugo new site .\n*) git init\n*) git config \u0026ndash;global user.name \u0026ldquo;kfrajer\u0026rdquo;\n*) git config \u0026ndash;global user.email krisfrajer@gmail.com\n*) git config \u0026ndash;global core.autocrlf true\n*) git config \u0026ndash;global merge.tool meld\n*) git config \u0026ndash;global mergetool.meld.cmd \u0026ldquo;meld $LOCAL $MERGED $REMOTE \u0026ndash;output $MERGED\u0026rdquo;\n*) git submodule add https://github.com/zzossig/hugo-theme-zzo.git themes/zzo\n*) ALSO WHEN NEEDED: git submodule update --remote --merge\n*) Follow quick start for this theme\n*) First: Check example site works:\n-) cd themes/zzo/exampleSite\n-) hugo server\n*) Then copy config, content, rsources and static to root\n-) hugo new \u0026lt;SECTIONNAME\u0026gt;/\u0026lt;FILENAME\u0026gt;.\u0026lt;FORMAT\u0026gt; to add new content\n*) other themes of interest:\n-) Intro to themes: https://www.youtube.com/watch?v=hBQlCtfRmqs\u0026amp;list=PL-Kz5P-mYdMgAJDmRJquyMHfdaIOD-3oj\u0026amp;index=4\n-) DOCS:\n-) https://themes.gohugo.io/hugo-theme-techdoc/\n-) https://themes.gohugo.io/ace-documentation/\n-) https://themes.gohugo.io/hugo-theme-zdoc/ ***\n-) https://themes.gohugo.io/hugo-theme-zzo/ ***\n-) https://themes.gohugo.io/beautifulhugo/\n-) https://themes.gohugo.io/hugo-theme-prav/\n-) PROFILE\n-) https://themes.gohugo.io/hugo-devresume-theme/\n-) https://themes.gohugo.io/hugo-orbit-theme/\n-) SHOWCASE\n-) https://themes.gohugo.io/hugo-theme-bootstrap4-blog/\n-) https://themes.gohugo.io/hugo-book/\n-) https://themes.gohugo.io/hugo-cards/\n-) https://themes.gohugo.io/strange-case/\n-) https://themes.gohugo.io/binario/\n-) https://themes.gohugo.io/midnight/\n-) https://themes.gohugo.io/hugo-primer/\n-) OTHERS\n-) Alabaster, Hugof, SP Minimal\n-) Hyde Hyde, After Dark, Main Road\n-) Blog ==\u0026gt; Geppaku, Twenty Fourteen\n-) CV==\u0026gt; Academic, Agency\n-) Titles==\u0026gt; Hestia Pure, Nederburg, Tracks, Hugo Future Imperfect, Robust\n-) Hugo Bootstrap V4, Kraiklyn, Blackburn\n-) Code Editor, Wave, Hyde, Docu API, Strange Case, Liquorice, Theme Hugo Foundation6\n-) Load via hugo server\n-) https://gohugo.io/ for quickstart guide and docs\nx) Note that config.toml file has this line theme = \u0026quot;zzo\u0026quot;\n#) hugo new post/welcome.md \u0026lt;===https://www.youtube.com/watch?v=w7Ft2ymGmfc\n+) echo \u0026quot; #Wecome to kfrajer.github.src\u0026rdquo; \u0026raquo; README.md\n+) git add .\n+) git commit -m \u0026ldquo;Hugo base template init\u0026rdquo;\n+) git remote add origin https://github.com/kfrajer/kfrajer.github.src.git\n+) git push -u origin master\no) hugo new Development/git.md\nhugo new Development/docker.md\no) Modified content/index.md \u0026lt;=== FROM https://github.com/digitalcraftsman/hugo-alabaster-theme/tree/master/exampleSite/content\no) Modified content/post/welcome.md\no) git add .\no) git commit -m \u0026ldquo;Added my first few posts: index in content, welcome in content/post. Added homepage tag and remove draft parameter on md header\u0026rdquo;\no) hugo serve -w \u0026lt;=== WORKS!\no) hugo -d published \u0026lt;=== builds html/css/js to deploy\no) Create .gitignore and add the folder above: published/**\nTEST: http://localhost:1313\nTEST: http://localhost:1313/post/welcome/\no) git push -u origin master\nx) git fetch origin\nx) git status\n*) hugo new \u0026lt;FILENAME\u0026gt;.\n*) hugo serve\n","description":"Steps to create this site","id":14,"section":"development","tags":["Hugo","static-generator","web","Golang"],"title":"Building a Hugo Page","uri":"http://kfrajer.github.io/en/development/cr_buidling_static_site/"},{"content":"Core Docker commands   docker ps -a\n  docker run --rm --name {containerName} {imageName}\n  docker run --rm -it --name {containerName} {imageName}\n  docker logs -f {containerName}: Continuos logs\n  docker exec -it {containerName} {cmd-to-execute}\n  alias ccx='f(){ [ -n \u0026quot;$1\u0026quot; ] \u0026amp;\u0026amp; docker exec -it \u0026quot;$1\u0026quot; /bin/bash; unset -f f; }; : Creates bash session in running container\n  docker inspect {containerName}\n  Yellow=\u0026rsquo;\\033[0;33m\n  IRed=\u0026rsquo;\\033[0;91m\u0026rsquo;\n  IBlue=\u0026rsquo;\\033[0;94m\u0026rsquo;\n  NC=\u0026rsquo;\\033[0m\u0026rsquo;\n  echo -e \u0026quot;$(docker ps --format \u0026quot;${Yellow}{{.Names}}${NC}\\n\\tStatus:${IRed} {{.Status}}${NC}\\n\\t${IBlue}Container ID:${NC} {{.ID}}\\t${IBlue}Command:${NC} {{.Command}}\\n\\t${IBlue}Image:${NC} {{.Image}}\u0026quot; )\u0026quot;\n  VVBODY=\u0026quot;$(docker ps -a --format \u0026quot;${IRed}{{.Status}}${NC},${Yellow}{{.Names}}${NC} , {{.ID}} , {{.CreatedAt}}\u0026quot; )\u0026quot;; echo -e \u0026quot;$VVBODY\u0026quot; | column -t -s,\n  echo -e \u0026quot;$(docker ps -a --format \u0026quot;${Yellow}{{.Names}}${NC}\\n\\tStatus:${IRed} {{.Status}}${NC}\\n\\t${IBlue}Container ID:${NC} {{.ID}}\\t${IBlue}Command:${NC} {{.Command}}\\n\\t${IBlue}Image:${NC} {{.Image}}\\n\\t${IBlue}CreatedAt:${NC} {{.CreatedAt}}\u0026quot; )\u0026quot;\n  VVHEAD=\u0026quot;${Black}${On_White}\\tSTATUS,CONTAINER-ID,CMD,IMAGE,CREATED AT${NC}\u0026quot;;VVBODY=\u0026quot;$(docker ps -a --format \u0026quot;${Yellow}{{.Names}}${NC}\\n\\t${IRed}{{.Status}}${NC} , {{.ID}} , {{.Command}} , {{.Image}} , {{.CreatedAt}}\u0026quot; )\u0026quot;;echo -e \u0026quot;$VVHEAD\\n$VVBODY\u0026quot; | column -t -s,\n  docker build -t {imageTag} .\n  docker build -t {imageTag} -f {DockerfileName} . : Context set to current folder\n  docker run -it --rm --mount type=bind,src=/c/Users/USR/Documents/folder,dst=/app/publish --name {appName} {imagetag}\n  docker rm $(docker ps -a -q)\n  [ -n \u0026quot;$(docker ps -a -q)\u0026quot; ] \u0026amp;\u0026amp; echo \u0026quot;Removing idle containers\u0026quot; \u0026amp;\u0026amp; docker rm $(docker ps -q -f \u0026quot;status=exited\u0026quot;)\n  docker rmi $(docker images | awk '{print $3}')\n  docker rmi $(docker images | grep \u0026quot;\u0026lt;none\u0026gt;\u0026quot; | awk '{print $3}')\n  docker images prune\n  docker images ls\n  docker volumes prune\n  docker volumes ls\n  docker network ls\n  docker network rm {name}\n  Core docker-compose commands  docker-compose up --build docker-compose --verbose up --build -d docker-compose down docker-compose -f file01.yml -f file02.yml up docker-compose run {serviceName} docker-compose stop \u0026amp;\u0026amp; docker-compose rm -f \u0026quot;\u0026quot;: Removes only the containers. It doe snot remove volumes or network adapters f(){ docker-compose stop \u0026quot;$@\u0026quot; \u0026amp;\u0026amp; docker-compose rm -f \u0026quot;$@\u0026quot;; unset -f f; }; f : To be used in a bash function  Other commands  export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}'):0 export DOCKER_HOST='tcp://localhost:2375' export DOCKER_HOST=unix:///var/run/docker.sock  ","description":"Core Docker commands for development in Linux","id":15,"section":"development","tags":["Docker","Docker-compose","Linux","WSL","Cheatsheet"],"title":"Docker Knowlegde Base","uri":"http://kfrajer.github.io/en/development/docker/"},{"content":"Core Git commands  git status git checkout git rev-parse --abbrev-ref HEAD: Current branch name git branch -a: List all branches git checkout -b git log --pretty=oneline git diff {branch1}..{branch2} git diff {fileName} git add {fileName01} {fileName02} ... {fileName0N} git commit -m \u0026quot;Commit msg here\u0026quot; git push  or  git push --set-upstream {upstream-ref} {which-branch} git stash git stash pop git commit --amend -m {new-commit-message} git commit -amend ## Opens vi to edit commit msg. Type a for append. When done, press ESC then press : and type wq meaning write and exit git cherry-pick {commitID01} {commitID02} ... {commitID0N} git rebase -i {commit-id-to-start-from}: squash, fix commits, order commits, drop commits git fetch master: Bring changes but do not merge them git reset HEAD: Reset unstaging changes (Reset \u0026ldquo;git add {\u0026hellip;}\u0026quot;) git reset HEAD^: Branch reset - reset last commit, move head to previous commit git config --global alias.uncommit 'reset HEAD^': Use this as git uncommit git reset HEAD {file}: Unstage the file but maintain the modifications git checkout -- {file}: Revert a file back to the state it was in before any changes Rebasing commits from master into current branch  # master(public): c1 - c37 # feaure(mine): c1 - c2 - c3 - [...] - c36 git checkout {master-br-name} git rebase {master-br-name} {feature-br-name} # Final: c1 - c37 - c2 - c3 - [...] - c36 # Branch changed here would be the feature branch (aka current branch at the end is \u0026quot;feature\u0026quot; branch) # If conflict arises, rebase will stop and indicate where the conflict is (what file) # - Resolve conflict using emacs: # - Remove conflict indicators # - Choose/amend changes to desired behavior # - Save file and exit # - `git rebase --continue`: It will continue rebase operation   git remote -v\n  git remote rm {nameRemote}\n  git remote add {nameRemote} {ssh:git_url}\n  git rev-parse --abbrev-ref HEAD: Current branch\n  git branch -D {branchName}: Removes branch even if it has not been pushed\n  git branch -m {oldName} {newName}: Rename branch\n  git mv {oldFileName} {newFileName}\n  GIT_TRACE_PERFORMANCE=1 git status: To get a report in git ops and their performance\n  git submodule add {URL-Repo}.git {folder}\n  git submodule update --remote --merge\n  git submodule update --init --recursive\n  ","description":"","id":16,"section":"development","tags":["one","two"],"title":"Git","uri":"http://kfrajer.github.io/en/development/git/"},{"content":"Markdownify box This is boxmd shortcode Simple box This is **box** shortcode  Code tabs Make it easy to switch between different code\njava javascript  1  System.out.println(\u0026#39;Hello World!\u0026#39;);     1  console.log(\u0026#39;Hello World!\u0026#39;);       'use strict'; var containerId = JSON.parse(\"\\\"d96f892eb0443615\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  Tabs for general purpose Windows MacOS Ubuntu  Windows section 1  console.log(\u0026#39;Hello World!\u0026#39;);   ⚠️Becareful that the content in the tab should be different from each other. The tab makes unique id hashes depending on the tab contents. So, If you just copy-paste the tabs with multiple times, since it has the same contents, the tab will not work.\n MacOS section Hello world!  Ubuntu section Great!    'use strict'; var containerId = JSON.parse(\"\\\"0fa06ef53ae6dc58\\\"\"); var containerElem = document.getElementById(containerId); var tabLinks = null; var tabContents = null; var ids = []; if (containerElem) { tabLinks = containerElem.querySelectorAll('.tab__link'); tabContents = containerElem.querySelectorAll('.tab__content'); } for (var i = 0; i 0) { tabContents[0].style.display = 'block'; }  Expand   Expand me  Title contents     Expand me2  Title2 contents2   Alert Colored box\nthis is a text this is a text this is a text this is a text Notice success text  info text  warning text  error text  ","description":"tabs, code-tabs, expand, alert, warning, notice, img, box","id":17,"section":"posts","tags":["shortcode"],"title":"Shortcodes","uri":"http://kfrajer.github.io/en/posts/shortcodes/"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae.\nNote that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn: Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  ","description":"Sample article showcasing basic Markdown syntax and formatting for HTML elements.","id":18,"section":"posts","tags":["markdown","css","html","themes"],"title":"Markdown Syntax Guide","uri":"http://kfrajer.github.io/en/posts/markdown-syntax/"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nInstagram Simple Shortcode .__h_instagram.card { font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif; font-size: 14px; border: 1px solid rgb(219, 219, 219); padding: 0; margin-top: 30px; } .__h_instagram.card .card-header, .__h_instagram.card .card-body { padding: 10px 10px 10px; } .__h_instagram.card img { width: 100%; height: auto; }  koloot.design   View More on Instagram   YouTube Privacy Enhanced Shortcode   Twitter Simple Shortcode .twitter-tweet { font: 14px/1.45 -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif; border-left: 4px solid #2b7bb9; padding-left: 1.5em; color: #555; } .twitter-tweet a { color: #2b7bb9; text-decoration: none; } blockquote.twitter-tweet a:hover, blockquote.twitter-tweet a:focus { text-decoration: underline; }  “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Graphic Design History (@DesignReviewed) January 17, 2019 Vimeo Simple Shortcode  .__h_video { position: relative; padding-bottom: 56.23%; height: 0; overflow: hidden; width: 100%; background: #000; } .__h_video img { width: 100%; height: auto; color: #000; } .__h_video .play { height: 72px; width: 72px; left: 50%; top: 50%; margin-left: -36px; margin-top: -36px; position: absolute; cursor: pointer; }  ","description":"A brief description of Hugo Shortcodes","id":19,"section":"posts","tags":["shortcodes","privacy"],"title":"Rich Content","uri":"http://kfrajer.github.io/en/posts/rich-content/"},{"content":"Code Syntax Highlighting Verify the following code blocks render as code blocks and highlight properly.\nMore about tuning syntax highlighting is the Hugo documentation.\nDiff 1 2 3 4 5 6 7 8 9 10  *** /path/to/original\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; --- /path/to/new\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; *************** *** 1 **** ! This is a line. --- 1 --- ! This is a replacement line. It is important to spell -removed line +new line   *** /path/to/original\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; --- /path/to/new\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; *************** *** 1 **** ! This is a line. --- 1 --- ! This is a replacement line. It is important to spell -removed line +new line Makefile CC=gcc CFLAGS=-I. hellomake: hellomake.o hellofunc.o $(CC) -o hellomake hellomake.o hellofunc.o -I. 1 2 3 4 5  CC=gcc CFLAGS=-I. hellomake: hellomake.o hellofunc.o $(CC) -o hellomake hellomake.o hellofunc.o -I.   JSON 1 2 3  {\u0026#34;employees\u0026#34;:[ {\u0026#34;firstName\u0026#34;:\u0026#34;John\u0026#34;, \u0026#34;lastName\u0026#34;:\u0026#34;Doe\u0026#34;}, ]}   Markdown 1 2 3  **bold** *italics* [link](www.example.com)   JavaScript 1  document.write(\u0026#39;Hello, world!\u0026#39;);   CSS 1 2 3  body { background-color: red; }   Objective C 1 2 3 4 5 6  #import \u0026lt;stdio.h\u0026gt;  int main (void) { printf (\u0026#34;Hello world!\\n\u0026#34;); }   Python 1  print \u0026#34;Hello, world!\u0026#34;   XML 1 2 3 4 5  \u0026lt;employees\u0026gt; \u0026lt;employee\u0026gt; \u0026lt;firstName\u0026gt;John\u0026lt;/firstName\u0026gt; \u0026lt;lastName\u0026gt;Doe\u0026lt;/lastName\u0026gt; \u0026lt;/employee\u0026gt; \u0026lt;/employees\u0026gt;   Perl 1  print \u0026#34;Hello, World!\\n\u0026#34;;   Bash 1  echo \u0026#34;Hello World\u0026#34;   PHP 1  \u0026lt;?php echo \u0026#39;\u0026lt;p\u0026gt;Hello World\u0026lt;/p\u0026gt;\u0026#39;; ?\u0026gt;   CoffeeScript 1  console.log(“Hello world!”);   C# 1 2 3 4 5 6 7 8  using System; class Program { public static void Main(string[] args) { Console.WriteLine(\u0026#34;Hello, world!\u0026#34;); } }   C++ 1 2 3 4 5 6 7  #include \u0026lt;iostream.h\u0026gt; main() { cout \u0026lt;\u0026lt; \u0026#34;Hello World!\u0026#34;; return 0; }   SQL 1 2  SELECT column_name,column_name FROM table_name;   Go 1 2 3 4 5  package main import \u0026#34;fmt\u0026#34; func main() { fmt.Println(\u0026#34;Hello, 世界\u0026#34;) }   Ruby 1  puts \u0026#34;Hello, world!\u0026#34;   Java 1 2 3 4 5 6 7 8 9 10 11 12  import javax.swing.JFrame; //Importing class JFrame import javax.swing.JLabel; //Importing class JLabel public class HelloWorld { public static void main(String[] args) { JFrame frame = new JFrame(); //Creating frame  frame.setTitle(\u0026#34;Hi!\u0026#34;); //Setting title frame  frame.add(new JLabel(\u0026#34;Hello, world!\u0026#34;));//Adding text to frame  frame.pack(); //Setting size to smallest  frame.setLocationRelativeTo(null); //Centering frame  frame.setVisible(true); //Showing frame  } }   Latex Equation 1  \\frac{d}{dx}\\left( \\int_{0}^{x} f(u)\\,du\\right)=f(x).   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  import {x, y} as p from \u0026#39;point\u0026#39;; const ANSWER = 42; class Car extends Vehicle { constructor(speed, cost) { super(speed); var c = Symbol(\u0026#39;cost\u0026#39;); this[c] = cost; this.intro = `This is a car runs at ${speed}.`; } } for (let num of [1, 2, 3]) { console.log(num + 0b111110111); } function $initHighlight(block, flags) { try { if (block.className.search(/\\bno\\-highlight\\b/) != -1) return processBlock(block.function, true, 0x0F) + \u0026#39; class=\u0026#34;\u0026#34;\u0026#39;; } catch (e) { /* handle exception */ var e4x = \u0026lt;div\u0026gt;Example \u0026lt;p\u0026gt;1234\u0026lt;/p\u0026gt;\u0026lt;/div\u0026gt;; } for (var i = 0 / 2; i \u0026lt; classes.length; i++) { // \u0026#34;0 / 2\u0026#34; should not be parsed as regexp  if (checkCondition(classes[i]) === undefined) return /\\d+[\\s/]/g; } console.log(Array.every(classes, Boolean)); } export $initHighlight;   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Hello world\u0026lt;/title\u0026gt; \u0026lt;link href=\u0026#39;http://fonts.googleapis.com/css?family=Roboto:400,400italic,700,700italic\u0026#39; rel=\u0026#39;stylesheet\u0026#39; type=\u0026#39;text/css\u0026#39;\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;index.css\u0026#34; /\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;//cdnjs.cloudflare.com/ajax/libs/less.js/2.5.1/less.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;vendor/prism.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;examples.bundle.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  /********************************************************* * General */ pre[class*=\u0026#34;language-\u0026#34;], code { color: #5c6e74; font-size: 13px; text-shadow: none; font-family: Consolas, Monaco, \u0026#39;Andale Mono\u0026#39;, \u0026#39;Ubuntu Mono\u0026#39;, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; } pre[class*=\u0026#34;language-\u0026#34;]::selection, code::selection { text-shadow: none; background: #b3d4fc; } @media print { pre[class*=\u0026#34;language-\u0026#34;], code { text-shadow: none; } } pre[class*=\u0026#34;language-\u0026#34;] { padding: 1em; margin: .5em 0; overflow: auto; background: #f8f5ec; } :not(pre) \u0026gt; code { padding: .1em .3em; border-radius: .3em; color: #db4c69; background: #f9f2f4; }   ","description":"Syntax highlighting test","id":20,"section":"posts","tags":["hugo"],"title":"Syntax highlighting","uri":"http://kfrajer.github.io/en/posts/syntax-highlight/"},{"content":"We need goldmark katex entension which is not yet we have: [https://github.com/gohugoio/hugo/issues/6544](https://github.com/gohugoio/hugo/issues/6544)  Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:  {{ if or .Params.math .Site.Params.math }} {{ partial \u0026quot;math.html\u0026quot; . }} {{ end }}  To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files.  Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $$ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $$\nBlock math:\n$$\n\\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } }\n$$\n","description":"A brief guide to setup KaTeX","id":21,"section":"posts","tags":null,"title":"Math Typesetting","uri":"http://kfrajer.github.io/en/posts/math-typesetting/"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site’s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 🙈 🙉 🙉 🙊 🙊\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3  .emoji { font-family: Apple Color Emoji,Segoe UI Emoji,NotoColorEmoji,Segoe UI Symbol,Android Emoji,EmojiSymbols; }  ","description":"Guide to emoji usage in Hugo","id":22,"section":"posts","tags":["emoji","gamoji","namoji","bamoji","amoji"],"title":"Emoji Support","uri":"http://kfrajer.github.io/en/posts/emoji-support/"},{"content":"digraph G { subgraph cluster_0 { style=filled; color=lightgrey; node [style=filled,color=white]; a0 -\u0026gt; a1 -\u0026gt; a2 -\u0026gt; a3; label = \u0026quot;process #1\u0026quot;; } subgraph cluster_1 { node [style=filled]; b0 -\u0026gt; b1 -\u0026gt; b2 -\u0026gt; b3; label = \u0026quot;process #2\u0026quot;; color=blue } start -\u0026gt; a0; start -\u0026gt; b0; a1 -\u0026gt; b3; b2 -\u0026gt; a3; a3 -\u0026gt; a0; a3 -\u0026gt; end; b3 -\u0026gt; end; start [shape=Mdiamond]; end [shape=Msquare]; } ","description":"A hack to put Graphviz on the web.","id":23,"section":"posts","tags":[""],"title":"Viz support","uri":"http://kfrajer.github.io/en/posts/test-viz/"},{"content":"{ \u0026quot;signal\u0026quot;: [ {\u0026quot;name\u0026quot;: \u0026quot;CLK\u0026quot;, \u0026quot;wave\u0026quot;: \u0026quot;p.....|...\u0026quot;}, {\u0026quot;name\u0026quot;:\u0026quot;DAT\u0026quot;, \u0026quot;wave\u0026quot;:\u0026quot;x.345x|=.x\u0026quot;, \u0026quot;data\u0026quot;:[\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;,\u0026quot;C\u0026quot;,\u0026quot;D\u0026quot;]}, {\u0026quot;name\u0026quot;: \u0026quot;REQ\u0026quot;, \u0026quot;wave\u0026quot;: \u0026quot;0.1..0|1.0\u0026quot;}, {}, {\u0026quot;name\u0026quot;: \u0026quot;ACK\u0026quot;, \u0026quot;wave\u0026quot;: \u0026quot;1.....|01.\u0026quot;} ]} ","description":"WaveDrom is a Free and Open Source online digital timing diagram (waveform) rendering engine that uses javascript, HTML5 and SVG to convert a WaveJSON input text description into SVG vector graphics.","id":24,"section":"posts","tags":[""],"title":"Wavedrom support","uri":"http://kfrajer.github.io/en/posts/test-wavedrom/"},{"content":"{ \u0026quot;type\u0026quot;: \u0026quot;bar\u0026quot;, \u0026quot;data\u0026quot;: { \u0026quot;labels\u0026quot;: [\u0026quot;One\u0026quot;, \u0026quot;Two\u0026quot;, \u0026quot;Three\u0026quot;, \u0026quot;Four\u0026quot;, \u0026quot;Five\u0026quot;, \u0026quot;Six\u0026quot;], \u0026quot;datasets\u0026quot;: [{ \u0026quot;label\u0026quot;: \u0026quot;# of Votes\u0026quot;, \u0026quot;data\u0026quot;: [12, 19, 3, 5, 3, 8] }] } } { \u0026quot;type\u0026quot;: \u0026quot;line\u0026quot;, \u0026quot;data\u0026quot;: { \u0026quot;labels\u0026quot;: [\u0026quot;One\u0026quot;, \u0026quot;Two\u0026quot;, \u0026quot;Three\u0026quot;, \u0026quot;Four\u0026quot;, \u0026quot;Five\u0026quot;, \u0026quot;Six\u0026quot;], \u0026quot;datasets\u0026quot;: [ { \u0026quot;label\u0026quot;: \u0026quot;# of Votes\u0026quot;, \u0026quot;data\u0026quot;: [12, 19, 3, 5, 2, 3], \u0026quot;backgroundColor\u0026quot;:\u0026quot;transparent\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;orange\u0026quot; }, { \u0026quot;label\u0026quot;: \u0026quot;Some other set\u0026quot;, \u0026quot;data\u0026quot;: [15, 8, 13, 5, 5, 9], \u0026quot;backgroundColor\u0026quot;:\u0026quot;transparent\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#44ccff\u0026quot; } ] } } ","description":"Simple yet flexible JavaScript charting for designers \u0026 developers","id":25,"section":"posts","tags":[""],"title":"Chart support","uri":"http://kfrajer.github.io/en/posts/test-chartjs/"},{"content":"Alice-\u0026gt;Bob: Hello Bob, how are you? Note right of Bob: Bob thinks Bob--\u0026gt;Alice: I am good thanks! Title: Here is a title A-\u0026gt;B: Normal line B--\u0026gt;C: Dashed line C-\u0026gt;\u0026gt;D: Open arrow D--\u0026gt;\u0026gt;A: Dashed open arrow ","description":"Generates UML sequence diagrams from simple text","id":26,"section":"posts","tags":[""],"title":"JS Sequence Diagram support","uri":"http://kfrajer.github.io/en/posts/test-js-sequence-diagrams/"},{"content":"graph TD; A--\u0026gt;B; A--\u0026gt;C; B--\u0026gt;D; C--\u0026gt;D; sequenceDiagram participant Alice participant Bob Alice-\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail... John--\u0026gt;Alice: Great! John-\u0026gt;Bob: How about you? Bob--\u0026gt;John: Jolly good! graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d classDiagram Class01 \u0026lt;|-- AveryLongClass : Cool \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { \u0026lt;\u0026lt;service\u0026gt;\u0026gt; int id size() } stateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*] pie \u0026quot;Dogs\u0026quot; : 386 \u0026quot;Cats\u0026quot; : 85 \u0026quot;Rats\u0026quot; : 15 ","description":"Generate diagrams, charts, graphs or flows from markdown-like text via javascript.","id":27,"section":"posts","tags":["diagram"],"title":"Mermaid support","uri":"http://kfrajer.github.io/en/posts/test-mermaid/"},{"content":"When $a \\ne 0$, there are two solutions to $(ax^2 + bx + c = 0)$ and they are\n$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.$$\n","description":"A JavaScript display engine for mathematics that works in all browsers.No more setup for readers. It just works.","id":28,"section":"posts","tags":[""],"title":"MathJax support","uri":"http://kfrajer.github.io/en/posts/test-mathjax/"},{"content":"The following\n$$ \\int_{a}^{b} x^2 dx $$\nIs an integral\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\nEnable Katex in the config file by setting the katex param to true. This will import the necessary Katex CSS/JS.\nSee the online reference of supported TeX functions.\nNote: For inline math to render correctly, your content file extension must be .mmark. See the official mmark site.\nInline math: $ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $ Inline math: $ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $\nBlock math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ Block math:\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","description":"KaTeX is a fast, easy-to-use JavaScript library for TeX math rendering on the web.","id":29,"section":"posts","tags":[""],"title":"Katex support","uri":"http://kfrajer.github.io/en/posts/test-katex/"},{"content":"st=\u0026gt;start: Start|past:\u0026gt;http://www.google.com[blank] e=\u0026gt;end: End|future:\u0026gt;http://www.google.com op1=\u0026gt;operation: My Operation|past op2=\u0026gt;operation: Stuff|current sub1=\u0026gt;subroutine: My Subroutine|invalid cond=\u0026gt;condition: Yes or No?|approved:\u0026gt;http://www.google.com c2=\u0026gt;condition: Good idea|rejected io=\u0026gt;inputoutput: catch something...|future st-\u0026gt;op1(right)-\u0026gt;cond cond(yes, right)-\u0026gt;c2 cond(no)-\u0026gt;sub1(left)-\u0026gt;op1 c2(yes)-\u0026gt;io-\u0026gt;e c2(no)-\u0026gt;op2-\u0026gt;e ","description":"flowchart.js is a flowchart DSL and SVG render that runs in the browser and terminal. Nodes and connections are defined in separately so that nodes can be reused and connections can be quickly changed.","id":30,"section":"posts","tags":[""],"title":"Flowchart support","uri":"http://kfrajer.github.io/en/posts/test-flowchart/"},{"content":"Sample images from Pixabay\n","description":"cartoon gallery","id":31,"section":"gallery","tags":null,"title":"Cartoon","uri":"http://kfrajer.github.io/en/gallery/cartoon/"},{"content":"Sample images from Pixabay\n","description":"photo gallery","id":32,"section":"gallery","tags":null,"title":"Photo","uri":"http://kfrajer.github.io/en/gallery/photo/"},{"content":"Hugo makes use of a variety of open source projects including:\n https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper  Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremelly fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub.\n","description":"Hugo, the world’s fastest framework for building websites","id":37,"section":"","tags":null,"title":"About-me","uri":"http://kfrajer.github.io/en/about/"}]