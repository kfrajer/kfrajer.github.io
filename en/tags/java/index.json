[{"content":"\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width,initial-scale=1\u0026#34;\u0026gt; \u0026lt;title\u0026gt;The HTML5 Herald\u0026lt;/title\u0026gt; \u0026lt;meta name=\u0026#34;description\u0026#34; content=\u0026#34;The HTML5 Content\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;author\u0026#34; content=\u0026#34;SitePoint\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;css/styles.css?v=1.0\u0026#34;\u0026gt; \u0026lt;script src=\u0026#34;https://www.gstatic.com/firebasejs/7.14.6/firebase-app.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/p5@0.10.2/lib/p5.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/p5@0.10.2/lib/addons/p5.sound.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;js/scripts.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Form template  Credits: https://github.com/siwalikm/quick-form-css/blob/master/demoForm.html  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width,initial-scale=1\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;qfc-dark.css\u0026#34;\u0026gt; \u0026lt;!-- \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;qfc-light.css\u0026#34;\u0026gt; --\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;qfc-container\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Form Title\u0026lt;/h2\u0026gt; \u0026lt;label\u0026gt;Description of Lorem ipsum dolor sit amet, consectetur adipiscing elit.\u0026lt;/label\u0026gt; \u0026lt;form class=\u0026#34;simple-form\u0026#34;\u0026gt; \u0026lt;!-- \u0026lt;form name=\u0026#34;frm1\u0026#34; method=\u0026#34;post\u0026#34; action=\u0026#34;/\u0026#34; onsubmit=\u0026#34;return greeting()\u0026#34;\u0026gt; --\u0026gt; \u0026lt;div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;input id=\u0026#34;usrfullname\u0026#34; placeholder=\u0026#34;Full Name\u0026#34; type=\u0026#34;text\u0026#34; required\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;input id=\u0026#34;usrphone\u0026#34; placeholder=\u0026#34;Phone Number\u0026#34; type=\u0026#34;tel\u0026#34; required\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;input id=\u0026#34;usremail\u0026#34; placeholder=\u0026#34;Email Address\u0026#34; type=\u0026#34;email\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;label\u0026gt;Gender\u0026lt;/label\u0026gt; \u0026lt;div\u0026gt; \u0026lt;label\u0026gt; \u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;usrgender\u0026#34; checked=\u0026#34;checked\u0026#34;\u0026gt;Male \u0026lt;/label\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;label\u0026gt; \u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;usrgender\u0026#34;\u0026gt;Female \u0026lt;/label\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;input id=\u0026#34;usrlikeform\u0026#34; type=\u0026#34;checkbox\u0026#34; checked=\u0026#34;checked\u0026#34;\u0026gt; \u0026lt;label\u0026gt;Do you love this form?\u0026lt;/label\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;label\u0026gt;Your City (single-select)\u0026lt;/label\u0026gt; \u0026lt;select id=\u0026#34;usrcity\u0026#34; id\u0026gt; \u0026lt;option disabled selected value=\u0026#34;--\u0026#34;\u0026gt;Select Your City\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;Bangalore\u0026#34;\u0026gt;Bangalore\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;Chennai\u0026#34;\u0026gt;Chennai\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;Kolkata\u0026#34;\u0026gt;Kolkata\u0026lt;/option\u0026gt; \u0026lt;/select\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;label\u0026gt;Favourite Foods (multi-select)\u0026lt;/label\u0026gt; \u0026lt;select id=\u0026#34;usrfood\u0026#34; multiple\u0026gt; \u0026lt;option value=\u0026#34;Cheese\u0026#34;\u0026gt;Cheese\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;Bacon\u0026#34;\u0026gt;Bacon\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;Pasta\u0026#34;\u0026gt;Pasta\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;Pizza\u0026#34;\u0026gt;Pizza\u0026lt;/option\u0026gt; \u0026lt;/select\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;label\u0026gt;Message (textarea)\u0026lt;/label\u0026gt; \u0026lt;div\u0026gt; \u0026lt;textarea id=\u0026#34;usrmessage\u0026#34; placeholder=\u0026#34;Eg. Enter your messages here\u0026#34;\u0026gt;\u0026lt;/textarea\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;label\u0026gt;Attach file\u0026lt;/label\u0026gt; \u0026lt;div\u0026gt; \u0026lt;input id=\u0026#34;usrfile\u0026#34; type=\u0026#34;file\u0026#34; id\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;button id=\u0026#34;usrsubmit\u0026#34; type=\u0026#34;submit\u0026#34; value=\u0026#34;submit\u0026#34; onclick=\u0026#34;return submitNow();\u0026#34;\u0026gt;Submit\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; function submitNow() { const data = prepareData(); console.log(\u0026#34;==Data==\u0026#34;); console.log(data); //alert(\u0026#34;Submit button clicked!\u0026#34;);  return true; } function prepareData(){ const fullname=document.querySelector(\u0026#34;#usrfullname\u0026#34;).value; const phone=document.querySelector(\u0026#34;#usrphone\u0026#34;).value; const email=document.querySelector(\u0026#34;#usremail\u0026#34;).value; const gender=( document.querySelector(\u0026#39;input[type=radio][name=usrgender]:checked\u0026#39;).value==\u0026#34;on\u0026#34; ? \u0026#34;male\u0026#34;:\u0026#34;female\u0026#34; ); const likeform=(document.querySelector(\u0026#34;#usrlikeform\u0026#34;).value==\u0026#34;on\u0026#34;); const cityel=document.querySelector(\u0026#34;#usrcity\u0026#34;); const city=cityel.options[cityel.selectedIndex].value; const foodel=document.querySelector(\u0026#34;#usrfood\u0026#34;); const food=Array.from(foodel).filter(el =\u0026gt; el.selected).map(el =\u0026gt; el.value); const msg=document.querySelector(\u0026#34;#usrmessage\u0026#34;).value; const file=document.querySelector(\u0026#34;#usrfile\u0026#34;).value; let date=new Date(); let time=date.getTime(); //Time from 1970  let utc=date.toJSON().slice(0,10).replace(/-/g,\u0026#39;/\u0026#39;); const dataForm={ date: firebase.firestore.Timestamp.fromDate(new Date(\u0026#34;December 10, 1815\u0026#34;)), time: time, fullname:fullname, phone:phone, email:email, gender:gender, likeform:likeform, city:city, food:food, msg:msg, file:file } return dataForm; } \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;div style=\u0026#34;padding-bottom:15px; font-family: \u0026#39;Roboto\u0026#39;;color:white;\u0026#34; align=\u0026#34;center\u0026#34;\u0026gt; made with \u0026lt;span style=\u0026#34;color:#e25555;\u0026#34;\u0026gt;‚ù§\u0026lt;/span\u0026gt; by \u0026lt;a target=\u0026#34;_blank\u0026#34; href=\u0026#34;https://twitter.com/\u0026#34;\u0026gt;@Twitter\u0026lt;/a\u0026gt; and the \u0026lt;a target=\u0026#34;_blank\u0026#34; href=\u0026#34;https://github.com/\u0026#34;\u0026gt;internet\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;style\u0026gt; a { color :#00bcd4; text-decoration: none; } \u0026lt;/style\u0026gt; \u0026lt;/html\u0026gt; ","description":"Basic HTML template for any project","id":0,"section":"templates","tags":["HTML","CSS","JS","Web-page"],"title":"Html Core","uri":"http://kfrajer.github.io/en/templates/html-core/"},{"content":"My sites  https://kfrajer.github.io http://devhugo.atspace.cc/en/index.html http://krisfrajer.atspace.cc/drdcsurvey/location.php?get=demo http://krisfrajer.atspace.cc/drdcsurvey/cgi-bin/demo3.pl http://www.bluelion.site/mem.php?top- readapps.xyz silverowl.biz: Expires June 6th 2021 krisfrajer.dev GCP: data4good, headless chrome, contact form https://data4good.uc.r.appspot.com/ /admin /hidden  Android  GPS map Blinking LEDs pwd-encoder-vX Model-Timer Stef-15  Reference - development  TMUX cheatsheet: https://www.hostinger.com/tutorials/tmux-beginners-guide-and-cheat-sheet/ Hugo themes:  https://themes.gohugo.io/hugo-theme-zzo/ https://themes.gohugo.io/hugo-theme-zdoc/   Emacs: http://ergoemacs.org/emacs/emacs.html GOlang tutorial: https://gocloud.dev/tutorials gRPC: https://www.grpc.io/docs/what-is-grpc/core-concepts/ Internet X.509 PKI CA and CRL: https://tools.ietf.org/html/rfc5280  References - Other  French modules: https://learn.altissia.org/platform/#/learning-path  ","description":"Active links of sites used for reference","id":1,"section":"development","tags":["my-sites","reference","cheatsheets"],"title":"Handy_links","uri":"http://kfrajer.github.io/en/development/handy_links/"},{"content":"Installing Docker in Windows Subsystem Linux (WSL) NOTES  After ssummer 2020, you need to have WSL2 which is made available for Windows 10 Home edition It is recommended to upgrade to Windows 10 Pro In \u0026ldquo;Turn Windows features on and off\u0026rdquo;, check \u0026ldquo;Windows Hypervisor Platform\u0026rdquo; To be confirmed, check \u0026ldquo;Hyper-V\u0026rdquo;? Currently working but this is not checked. To investigate\u0026hellip; Finally, install \u0026ldquo;Docker Destop\u0026rdquo; and ensure the docker-machine is up and running. Enable WSL2 support and add the following line in your Linux distro: export DOCKER_HOST=unix:///var/run/docker.sock  Instructions 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  $ sudo apt install apt-transport-https ca-certificates curl software-properties-common $ sudo apt-get remove docker docker-engine docker.io containerd runc $ sudo apt-get update $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - $ sudo add-apt-repository \u0026#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs)stable\u0026#34; $ sudo add-apt-repository \u0026#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable\u0026#34; $ sudo apt-get update $ apt-cache policy docker-ce $ sudo apt install docker-ce $ apt list -a docker-ce $ echo $USER $ sudo usermod -aG docker $USER Log out and back in [OR] `su - ${USER}` $ id -nG ## You should be in the docker group $ sudo usermod -aG docker username ## Optional $ sudo nano /usr/local/sbin/start_docker.sh \u0026gt; #!/usr/bin/env bash \u0026gt; sudo cgroupfs-mount \u0026gt; sudo service docker start $ sudo chmod +x /usr/local/sbin/start_docker.sh $ sudo chmod 755 /usr/local/sbin/start_docker.sh $ sudo nano /etc/sudoers \u0026gt; {your username here} ALL=(ALL:ALL) NOPASSWD: /bin/sh /usr/local/sbin/start_docker.sh ## User echo $USER for username $ /bin/sh /usr/local/sbin/start_docker.sh $ `sudo systemctl status docker` [OR] `sudo service docker status`   REFERENCES  INTRO to Docker Docker Running Seamlessly in Windows Subsystem Linux  ","description":"Installing Docker in Windows Subsystem Linux","id":2,"section":"development","tags":["Docker","WSL","Cheatsheet"],"title":"Setup Docker in Wsl","uri":"http://kfrajer.github.io/en/development/setup-docker-in-wsl/"},{"content":"Memory analysis using docker  Reference: https://github.com/CppMtl/Meetups/tree/master/2020/2020-02-27%20%5BGabriel%20Aubut-Lussier%5D%20Memory%20analysis  Roadmap 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58  docker run --rm -it ubuntu ls /proc ls /proc/1 bash cat /proc/1/stack docker run --privileged --rm -it ubuntu cat /proc/1/stack less /proc/1/smaps apt-get install less less /proc/1/maps Virtual memory Different binary sections Different permissions [heap] Shared libraries (libc, terminfo, dynamic linker) Anonymous zones [stack] [vvar], [vdso], [vsyscall] less /proc/1/smaps Rss Pss Shared_* Private_* VmFlags less /proc/1/smaps_rollup less /proc/1/map_files/* less /proc/1/oom_score less /proc/1/status Vm* pushd /home/01-programme-vide g++ main.cpp -o 01 gdb 01 break _exit run ps -a | grep 01 less /proc/\u0026lt;pid\u0026gt;/maps popd pushd /home/02-programme-new g++ main.cpp -o 02 gdb 02 break _exit run ps -a | grep 02 less /proc/\u0026lt;pid\u0026gt;/maps Arena popd pushd /home/03-gros-new g++ main.cpp -o 03 -g gdb 03 break f run finish ps -a | grep 03 less /proc/\u0026lt;pid\u0026gt;/maps Zone anonyme popd strace -e brk -k strace -e mmap -k   main-01.cpp 1 2 3 4  int main() { return 42; }   main-02.cpp 1 2 3 4  int main() { return *new int{42}; }   main-03.cpp 1 2 3 4 5 6 7 8 9 10  char* f() { return new char[128*1024 - 15]; } int main() { f(); return 42; }   main-04.cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  #include \u0026lt;vector\u0026gt; void f() { std::vector\u0026lt;std::vector\u0026lt;char\u0026gt;\u0026gt; v; const int n = 10; v.reserve(n); for (int i = 0; i \u0026lt; n; ++i) { v.emplace_back(); v.back().reserve(127 * 1024); } } int main() { std::vector\u0026lt;char\u0026gt; v; v.reserve(127*1024); f(); }   ","description":"Demonstration of mem analysis by C+++ Montreal - 2020","id":3,"section":"development","tags":["docker","c++","Memory analysis"],"title":"Docker Cpp Memory Demo","uri":"http://kfrajer.github.io/en/development/docker-cpp-mem-demo/"},{"content":"Git flow  Set git for the first time:  E-mail, name, crlf line termination handling git init git config \u0026ndash;global user.name \u0026ldquo;kfrajer\u0026rdquo; git config \u0026ndash;global user.email krisfrajer@gmail.com git config \u0026ndash;global core.autocrlf true git config \u0026ndash;global merge.tool meld git config \u0026ndash;global mergetool.meld.cmd \u0026ldquo;meld $LOCAL $MERGED $REMOTE \u0026ndash;output $MERGED\u0026rdquo; Set git token   git clone repo(s) locally Create a branch with named either feature(s)/{feature-name}, bugfix/{issue-name} or mayor/{name}  git checkout -b {purpose}/{name}   Perform changes, add unit/system/integration tests Commit often Push upstream to origin. For a branch not in origin yet, you need to push providing the branch name:  git push \u0026ndash;set-upstream origin your_branch_name If CI exist, this operation should trigger running all tests This push can be done multiple times as long as the branch is not merged against master   Any additional/new code and commits can be pushed to this branch while in wip When the feature is ready, or to start an early review, create a merge request (MR)  Any additional commit will automatically update your MR You can start MR anytime even if feature is not yet done. Add the WIP(work in progress) header so the branch is not merged by accident in the case that is not ready to be merged Add a one line header starting with either [FEATURE] or [BUGFIX] follow by a short descriptive title, an empty line and a body describing details of the MR. It is useful to have a template. Tick delete branch and squash commit (in case of multiple commits) Address and resolve all threads from the multiple discussions from the reviewers For any code corrections, additions or deletions, perform them locally, commit and push them upstream to this branch   Merge your feature/bug fix after approval is granted.  If squash commits is needed and was enabled, you need to update the \u0026ldquo;squash commits\u0026rdquo; commit message This will trigger running the CI on the master with the new changes. Only merge after configuration changes are done (in case they are needed for this MR)   After a successful merge, master is tagged with semantic versioning. Deploy master  Deploy into dev environment Perform sanity test (advanced integration test)   Deploy to other environments (User aceptance testing, QA, prod)  To be discussed  Resolving merge conflicts Pull rebasing before pushing upstream  ","description":"Git flow using feature branch strategy","id":4,"section":"development","tags":["Git","Cheatsheet","Git flow","version control"],"title":"Git Flow - Feature branch","uri":"http://kfrajer.github.io/en/development/git-flow-fbranch/"},{"content":"Makefile: Newsletter/Printing Press Template (Go) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72  .DEFAULT_GOAL := build .PHONY: clean CTIMESTAMP=$(shell date +%Y%m%d%H%M%S) MAIN=newsletter-prep DF_ORIGINAL=dockerfiles/df-original/Dockerfile DF_STAGES=dockerfiles/df-stages/Dockerfile DC_DF_FILE=dockerfiles/dockercompose/Dockerfile DC_MAIN_FILE=dockerfiles/dockercompose/docker-compose.yml LOGFILE=log-backups.log TRASH=Trash/ info: @ echo \u0026#34;Build and runs report generator (code name newsletter\u0026#34; safebackup: clean $(shell echo \u0026#34;:::::Dockerfile_$(CTIMESTAMP)\u0026#34; \u0026gt;\u0026gt; $(TRASH)/$(LOGFILE)) @echo \u0026#34;:::::Dockerfile_$CTIMESTAMP\u0026#34; -@test -f Dockerfile \u0026amp;\u0026amp; $(shell head -n 3 Dockerfile \u0026gt;\u0026gt; $(TRASH)/$(LOGFILE)) -@test -f Dockerfile \u0026amp;\u0026amp; $(shell [ ! -s Dockerfile ] \u0026amp;\u0026amp; echo \u0026#34; (Dockerfile was empty)\u0026#34; \u0026gt;\u0026gt; $(TRASH)/$(LOGFILE)) -@test -f Dockerfile \u0026amp;\u0026amp; cp -vf Dockerfile $(TRASH)/Dockerfile_$(CTIMESTAMP) || true -@test -f docker-compose.yml \u0026amp;\u0026amp; cp -vf docker-compose.yml $(TRASH)/docker-compose_$(CTIMESTAMP).yml || true safeori: safebackup -@test -f Dockerfile \u0026amp;\u0026amp; mv Dockerfile $(DF_ORIGINAL) safestages: safebackup -@test -f Dockerfile \u0026amp;\u0026amp; mv Dockerfile $(DF_STAGES) safedc: safebackup -@test -f Dockerfile \u0026amp;\u0026amp; mv Dockerfile $(DC_DF_FILE) -@test -f docker-compose.yml \u0026amp;\u0026amp; mv docker-compose.yml $(DC_MAIN_FILE) checkifsafe: -@test -f Dockerfile \u0026amp;\u0026amp; echo \u0026#34;!!!!! WARNING: Dockerfile exist.\u0026#34; \u0026amp;\u0026amp; echo \u0026#34;!!!!! WARNING: You need to save proper session first\u0026#34; ori: checkifsafe -@test ! -f Dockerfile \u0026amp;\u0026amp; cp $(DF_ORIGINAL) . stages: checkifsafe -@test ! -f Dockerfile \u0026amp;\u0026amp; cp $(DF_STAGES) . dc: checkifsafe -@test ! -f Dockerfile \u0026amp;\u0026amp; cp $(DC_DF_FILE) . -@test ! -f docker-compose.yml \u0026amp;\u0026amp; cp $(DC_MAIN_FILE) . build: clean CGO_ENABLED=0; GOOS=linux GOARCH=amd64 go build -ldflags \u0026#39;-s -w\u0026#39; -v -o ./pkg/... chmod +x $(MAIN) ## STATICALLY compiled binary: RUN CGO_ENABLED=0 go get -a -ldflags \u0026#39;-s\u0026#39; github.com/adriaandejonge/helloworld  run: build ./$(MAIN) tar: tar -cvf ~/backup_$(CTIMESTAMP).tar * echo \u0026#34;Backup created at ~/backup_$(CTIMESTAMP).tar\u0026#34; clean: @ echo \u0026#34;Cleaning up...\u0026#34; mkdir -p $(TRASH) mv -f $(MAIN) $(TRASH) || true FILES=\u0026#34;$(shell find -type f -name \u0026#39;*.*~\u0026#39; -o -name \u0026#39;*~\u0026#39;)\u0026#34;; mv -f $$FILES $(TRASH) || true @ echo \u0026#34;Cleaning up... DONE\u0026#34; test: @echo \u0026#34;CTIMESTAMP is $(CTIMESTAMP)\u0026#34; -@test -f Dockerfile \u0026amp;\u0026amp; echo \u0026#34;File does exist\u0026#34; -@test ! -f Dockerfile \u0026amp;\u0026amp; echo \u0026#34;File does NOT exist $CTIMESTAMP\u0026#34;   Makefile: Bets Containeration (NodeJS) .DEFAULT_GOAL := restart CTIMESTAMP=$(shell date +%Y%m%d%H%M%S) up: ## Spin al lservices up  @ echo \u0026#34;Spinning containers up!\u0026#34; docker-compose up --build -d # ccps down: ## Spin all services down and remove all associated volumes  @ echo \u0026#34;Tearing down, wait...!\u0026#34; docker-compose down -v #docker volume rm webapp-data webapp-logs delay: sleep 5 run: restart ## Alias for restart goal  restart: down delay up info ## Spins the services down and then up (Default goal)  info2: ## Attempt to print pretty `docker ps`  @echo \u0026#34;$(docker ps --format \u0026#34;${Yellow}{{.Names}}${NC}\\n\\tStatus:${IRed}{{.Status}}${NC}\\n\\t${IBlue}Container ID:${NC}{{.ID}}\\t${IBlue}Command:${NC}{{.Command}}\\n\\t${IBlue}Image:${NC}{{.Image}}\u0026#34; )\u0026#34; info: ## To run when service is up. Prints each service logs, current network and output each container\u0026#39;s ip addr  @echo \u0026#34;CTIMESTAMP is $(CTIMESTAMP)\u0026#34; docker logs mysql @echo \u0026#34;=======\u0026#34; docker logs cronjob @echo \u0026#34;=======\u0026#34; docker logs webapp @echo \u0026#34;=======\u0026#34; docker network ls @echo \u0026#34;=======\u0026#34; docker inspect -f \u0026#39;{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}\u0026#39; mysql docker inspect -f \u0026#39;{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}\u0026#39; webapp docker inspect -f \u0026#39;{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}\u0026#39; cronjob cat /etc/resolv.conf test: ## Test the webapp service  @echo \u0026#34;Testing services...\u0026#34; curl \u0026#34;http://localhost:8080/status\u0026#34; #@echo \u0026#34;=======\u0026#34; #curl \u0026#34;http://webapp:8080/status\u0026#34; @echo \u0026#34;END of TEST\u0026#34; .PHONY: man man: help ## Alias for help goal  .PHONY: help help: ## This help  @ echo \u0026#34;==========\u0026#34; @ echo \u0026#34;Help menu:\u0026#34; @ echo \u0026#34;==========\u0026#34; @ echo \u0026#34;INSTRUCTIONS: Type \u0026#39;make {GOAL}\u0026#39; where {GOAL} is any of the following entries:\u0026#34; @ echo \u0026#34;\u0026#34; @grep -hE \u0026#39;^[a-zA-Z_-]+.*?:.*?## .*$$\u0026#39; ${MAKEFILE_LIST} | sort | awk \u0026#39;BEGIN {FS = \u0026#34;:.*?## \u0026#34;}; {printf \u0026#34;\\033[36m%-30s\\033[0m %s\\n\u0026#34;, $$1, $$2}\u0026#39; .PHONY: clean clean: ## Remove temporal/backup file screated by editors  @ echo \u0026#34;Cleaning up‚Ä¶\u0026#34; mkdir -p $(TRASH) mv -f $(MAIN) $(TRASH) || true FILES=\u0026#34;$(shell find -type f -name \u0026#39;*.*~\u0026#39; -o -name \u0026#39;*~\u0026#39;)\u0026#34;; mv -f $$FILES $(TRASH) || true @ echo ‚ÄúCleaning up‚Ä¶ DONE ","description":"Makefile demo - Nesletter project","id":5,"section":"templates","tags":["c++","make","Makefile"],"title":"Makefile","uri":"http://kfrajer.github.io/en/templates/makefile/"},{"content":"############### # FROM buildpack-deps:buster-curl as certGetter ## Copy from src to dest, load to base and outputed in master ENV SRC_CERT=ORGANIZATION \\ DEST_CERT=/usr/share/ca-certificates/ORGANIZATION \\ BASE_CERT=/etc/ca-certificates.conf \\ MASTER_CERT_FILE=/etc/ssl/certs WORKDIR app/ COPY . . RUN mkdir -p $DEST_CERT \u0026amp;\u0026amp; cp -f $SRC_CERT/* $DEST_CERT/ \u0026amp;\u0026amp; \\ for i in `find ${SRC_CERT} -type f -name \u0026quot;*.crt\u0026quot;`; do echo $i \u0026gt;\u0026gt; $BASE_CERT; echo \u0026quot;Loading $i into $BASE_CERT\u0026quot;; done \u0026amp;\u0026amp; \\ echo \u0026quot;Calling update-ca-certificates...\u0026quot; \u0026amp;\u0026amp; update-ca-certificates ONBUILD RUN echo -e \u0026quot;\\nFinish executing loading\\n\\nCertGetter\\n\\nNext step...\\n\u0026quot; ############### # FROM buildpack-deps:buster-curl as printingPressGetter ENV PRINTING_PRESS_VERSION=\u0026quot;v0.2.0\u0026quot; ENV PRINTINGPRESSFILE=printing-press_\u0026quot;${PRINTING_PRESS_VERSION}\u0026quot;_linux \\ MASTER_PRINTINGPRESS=/usr/local/bin/printing-press RUN curl -O https://artifactory.ORGANIZATION.org/generic/ORGANIZATIONSUB/printing-press/${PRINTINGPRESSFILE} \u0026amp;\u0026amp; \\ mv -v ./${PRINTINGPRESSFILE} $MASTER_PRINTINGPRESS \u0026amp;\u0026amp; \\ chmod +x $MASTER_PRINTINGPRESS ONBUILD RUN echo -e \u0026quot;\\nFinish executing loading\\n\\nPrintingPressGetter\\n\\nNext step...\\n\u0026quot; ############### # FROM golang:1-alpine as buildStage ENV APPROOT=$GOPATH/app WORKDIR $APPROOT #COPY Dockerfile Makefile go.* pkg scripts $APPROOT COPY . $APPROOT #RUN chmod +x scripts/report-gen-cmd.sh \u0026amp;\u0026amp; make build ENTRYPOINT [\u0026quot;scripts/report-gen-cmd.sh\u0026quot;] #ENTRYPOINT [\u0026quot;/bin/bash\u0026quot;] #CMD [\u0026quot;build\u0026quot;] #ENTRYPOINT [\u0026quot;make\u0026quot;] ONBUILD RUN echo -e \u0026quot;\\nFinish executing loading\\n\\nBuildStage:$APPROOT\\n\\nNext step...\\n\u0026quot; ############### # FROM golang:1-alpine #FROM alpine as runtime ENV PATH=/usr/local/bin:/bin:/sbin:$PATH \\ MASTER_PRINTINGPRESS=/usr/local/bin/printing-press \\ MASTER_CERT_FILE=/etc/ssl/certs \\ BINROOT=/app \\ RECIPIENT_EMAIL=\u0026quot;user@example.com\u0026quot; \\ GITLAB_USER_EMAIL=\u0026quot;user@example.com\u0026quot; \\ SEND_EMAIL_FLAG=true #OUTFOLDER=\u0026quot;$BINROOT/publish\u0026quot; \\ #RUN apk update \u0026amp;\u0026amp; apk add --no-cache bash WORKDIR /app COPY . $BINROOT COPY --from=certGetter $MASTER_CERT_FILE/* $MASTER_CERT_FILE/ COPY --from=printingPressGetter $MASTER_PRINTINGPRESS $MASTER_PRINTINGPRESS COPY --from=buildStage /go/bin/newsletter-prep $BINROOT/newsletter-prep ##find . -type f -print0 | xargs -0 -n 1 -P 4 dos2unix RUN for i in `find -type f -name \u0026quot;*.sh\u0026quot; -o -name \u0026quot;*.json\u0026quot;`; do sed -i 's/\\r//g' $i; echo \u0026quot;Removing Windows end of line for : $i\u0026quot;; done \u0026amp;\u0026amp; \\ for i in `find editorial/ -type f -name \u0026quot;*.json\u0026quot;`; do sed -i ':a;N;$!ba;s/\\n/ /g' $i; echo \u0026quot;Removing new line character03 in: $i\u0026quot;; done #ENTRYPOINT [\u0026quot;/bin/bash\u0026quot;] ENTRYPOINT \u0026quot;$BINROOT/newsletter-prep\u0026quot; ","description":"Demo docker multi-stages","id":6,"section":"templates","tags":["docker","build","Multistage"],"title":"Dockerfile Multistage - Newsletter/PrintingPress (Go)","uri":"http://kfrajer.github.io/en/templates/docker/dockerfile-multistage/"},{"content":"P5js Template: Loading local p5.js script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width,initial-scale=1\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Demo P5.js\u0026lt;/title\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/p5@0.10.2/lib/p5.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/p5@0.10.2/lib/addons/p5.sound.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;sketch.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   P5js Template: Embedded p5.js script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/p5@1.0.0/lib/p5.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; function setup() { createCanvas(400, 400); } function draw() { if (mouseIsPressed) { fill(0); } else { fill(255); } ellipse(mouseX, mouseY, 80, 80); } \u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   P5js Template: Loading a local image 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Fetching image\u0026lt;/title\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/p5@1.0.0/lib/p5.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; //const site = \u0026#39;https://covers.openlibrary.org/b/id/295577-S.jpg\u0026#39;;  const site = \u0026#39;drake2.png\u0026#39;; async function catchImage(){ const res = await fetch(site); const blob = await res.blob(); document.getElementById(\u0026#39;showcase\u0026#39;).src = URL.createObjectURL(blob); } catchImage().catch(error =\u0026gt; { console.log(\u0026#39;ERROR\u0026#39;) console.error(error) }); \u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;img src=\u0026#34;\u0026#34; id=\u0026#34;showcase\u0026#34; /\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   ","description":"Initial p5js template with sources from CDN","id":7,"section":"templates","tags":["Processing","js","Javascript","p5js"],"title":"P5JS HTML Bundle","uri":"http://kfrajer.github.io/en/templates/processing/p5js-html-bundle/"},{"content":"Processing Template for New Sketches 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58  //REFERENCES: //REFERENCES: //REFERENCES:  //INSTRUCTIONS: // *-- // *-- // *-- // *--  //=========================================================================== // IMPORTS:  //=========================================================================== // FINAL FIELDS:  //=========================================================================== // GLOBAL VARIABLES:  //=========================================================================== // PROCESSING DEFAULT FUNCTIONS:  void settings(){ size(400,600); } void setup(){ textAlign(CENTER,CENTER); rectMode(CENTER); fill(255); strokeWeight(2); } void draw(){ background(0); } void keyReleased(){ } void mouseReleased(){ } //=========================================================================== // OTHER FUNCTIONS:    ","description":"Template - Processing Java","id":8,"section":"templates","tags":["Processing","Java","P3"],"title":"Processing-java","uri":"http://kfrajer.github.io/en/templates/processing/processing-java/"},{"content":"Overview In this section you find sample docker-compose files that allows to run a master-slave service. One service defines a custom bridge network, the second connects to this network. In addition, there is a demo of overriding a docker-compose file using another docker-compose file. Finally, you find handy commands to debug docker containers and a sample .env file.\nHandy commands for debugging  Shows all running containers: docker ps -a Removes idle stopped containers: docker rm $(docker ps -q -f \u0026quot;status=exited\u0026quot;) See logs from container (name as displayed in docker ps): docker logs -f {containerName} Create bash session in a running container: docker exec -it {containerName} /bin/bash To explore/beautify logs in container and extract loglevel and message and assign it to LEVEL and MSG resp.: cat app_logs.txt | jq \u0026quot;. | {LEVEL: .logLevel, MSG: .message}\u0026quot; To see the current network setup: docker network ls  Example Dockerize PostgreSQL  https://docs.docker.com/engine/examples/postgresql_service/  Dockerfiles with common network layer: Master-slave setup Instructions  Configure values in .env file Init sequence:  Spin master first (See cmd #1) Spin slave second (See cmd #1)   Docker tear down instructions:  Stop + remove slave container first. Do not run dk-cp down (See cmd #2 below) Spin down master script. It will manage the network teardown (See cmd #3)   If slave container needs to be re-built and spin up again: Init only slave If master container needs to be re-built and spin up again: Follow init sequence  Sample commands:  docker-compose -f docker-compose.yml -f docker-compose.tandem.yml up --build -d docker-compose stop \u0026amp;\u0026amp; docker-compose rm -f docker-compose -f docker-compose.yml -f docker-compose.tandem.yml down  Standard .env file 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  ## docker-compose will extract the variables from this file ## If variable is not defined here, it needs to be defined in terminal ## session running docker-compose. Any variable define in current session ## will superseed values defined here. Nevertheless, env variable ## needs to be explicitely defined and read in the docker-compose file ## SVC_PORT=8081 #COMPOSE_PROJECT_NAME=name_folder_where_master_is ## You need this variable in the slave CONFIG_VERSION=latest SVC_ENVIRONMENT=dev DOCKERFILE=./Dockerfile BASE_REPO_PATH=/d/repo/folder FOLDER_NAME_01=service_core FOLDER_NAME_01=svc_name MAIN_SVC_NAME=svc_name_main #CRED_WINDOWS_CONFIG_PATH=/d/.credential #OTHER_ENV_VAR_TO_USE=/ ## Next can be setup here or in terminal session locally SVC_LOGS_FOLDER_PATH=/ AUX_SVC_ADDR=0.0.0.0   MASTER docker-compose.yml file 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67  version: \u0026#39;3.4\u0026#39;x-bucket-path: \u0026amp;default-bucket-svc-path \u0026#34;${FOLDER_NAME_01}/${FOLDER_NAME_02}/config/${CONFIG_VERSION}/${SVC_ENVIRONMENT}\u0026#34;x-volumes: # Relative paths doesn\u0026#39;t work with WSL and docker for Windows \u0026amp;default-volumes - type: bind source: ${BASE_REPO_PATH:?\u0026#34;BASE_REPO_PATH needs to be set, \u0026#39;D:/git-repos\u0026#39; is an example. This is used for Docker for windows with Windows Linux SubSystem binded volumes in your container. Uncomment voume If you don\u0026#39;t want them or create a shadow d-c yaml file\u0026#34;}/${FOLDER_NAME_01}/${FOLDER_NAME_02}/${MAIN_SVC_NAME} target: /${MAIN_SVC_NAME} - type: bind source: ${BASE_REPO_PATH:?\u0026#34;BASE_REPO_PATH needs to be set, \u0026#39;D:/git-repos\u0026#39; is an example. This is used for Docker for windows with Windows Linux SubSystem binded volumes in your container. Uncomment voume If you don\u0026#39;t want them or create a shadow d-c yaml file\u0026#34;}/${FOLDER_NAME_01}/${FOLDER_NAME_02}/${MAIN_SVC_NAME}-config target: /${MAIN_SVC_NAME}-config - type: bind source: ${CRED_WINDOWS_CONFIG_PATH:?\u0026#34;CRED_WINDOWS_CONFIG_PATH is unset, \u0026#39;C:/Users/username/.credential\u0026#39; is an example. This is used for Docker for windows with WSL binded volumes in your container. Uncomment this volume if you don\u0026#39;t want them\u0026#34;} target: \u0026#34;/root/.credential\u0026#34;x-args: \u0026amp;default-args http_proxy: \u0026#34;http://yourproxy.org:port\u0026#34; https_proxy: \u0026#34;http://yourproxy.org:port\u0026#34; no_proxy: \u0026#34;localhost, 127.0.0.1\u0026#34;x-environment: \u0026amp;default-env SVC_ENVIRONMENT: ${SVC_ENVIRONMENT} CRED_CONFIG_PATH: \u0026#34;/root/.credential\u0026#34; SVC_LOGS_FOLDER_PATH: \u0026#34;${MAIN_SVC_NAME}/logs\u0026#34; CONFIG_VERSION: ${CONFIG_VERSION} CONFIG_SVC_BUCKET: \u0026#34;bucket-name-for-svc\u0026#34; CONFIG_SVC_BUCKET_PATH: *default-bucket-svc-path AUX_SVC_ADDR: ${AUX_SVC_ADDR:?\u0026#34;AUX_SVC_ADDR is unset. You should have example to `example`\u0026#34;}services: main-dev: build: args: *default-args environment: \u0026lt;\u0026lt; : *default-env OTHER_ENV_VAR: ${OTHER_ENV_VAR_TO_USE:?\u0026#34;OTHER_ENV_VAR_TO_USE is unset. \u0026#39;dflt-value\u0026#39; is an example\u0026#34;} volumes: *default-volumes networks: - svc_net aux-svc: image: aux_svc_image:latest ports: - \u0026#39;svc_port:svc_port\u0026#39; networks: - svc_net main-test: build: args: *default-args environment: OTHER_ENV_VAR: ${OTHER_ENV_VAR_TO_USE:?\u0026#34;OTHER_ENV_VAR_TO_USE is unset. \u0026#39;dflt-value\u0026#39; is an example\u0026#34;} volumes: # Relative paths doesn\u0026#39;t work with WSL and docker for windows *default-volumesnetworks: svc_net: driver: bridge  Additional lines for SLAVE docker-compose.yml file These lines are needed to define an external network so service is attached to it instead of the default bridge network\n1 2 3 4  networks: my_net: external: name: ${COMPOSE_PROJECT_NAME}_my_net  Other service definitions in a docker-compose file Demo showing definition of additional services\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  services: redis: image: redis volumes: *default-volumes ports: - \u0026#39;6379:6379\u0026#39; networks: - my_net db: image: mongo:latest command: mongod --port 27018 ports: - \u0026#39;27018:27018\u0026#39; networks: - my_net mysql: image: mysql container_name: mysql volumes: - mysql:/var/lib/mysql environment: - MYSQL_ROOT_PASSWORD=root - MYSQL_DATABASE=ghost - MYSQL_USER=ghost - MYSQL_PASSWORD=password networks: - dbvolumes: mysql:  Sample overriding a docker-compose file To override a docker-compose file, you need to pass both files to docker-compose and docker-compose will set the state based from the difference of these two files. Use case: This permit to differentiate running locally and overriding when deploying in a CI/CD pipeline removing volumes or dropping environmental variables. The command which builds the service(s) and sets docker-compose in dttached state:\ndocker-compose -f docker-compose.yml -f docker-compose.deploy.yml up --build -d\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50  # This file will override the docker-compose.yml# Currently overrrides only any mounted volumes because they don\u0026#39;t exist when deployed# The way the override work with volume : it override the volume with a different # source but the same destination pathversion: \u0026#39;3.4\u0026#39;x-args: \u0026amp;default-args http_proxy: \u0026#34;\u0026#34; https_proxy: \u0026#34;\u0026#34; no_proxy: \u0026#34;\u0026#34;x-environment: \u0026amp;default-env \u0026lt;\u0026lt; : *default-args REMOTE_SERVICE_USE_PUBLIC_IP: \u0026#34;false\u0026#34;#Next modified previously defined volumesx-volumes: # Relative paths doesn\u0026#39;t work with WSL and docker for windows \u0026amp;default-volumes - type: bind source: /dir target: /${MAIN_SVC_NAME} - type: bind source: /dir target: /${MAIN_SVC_NAME}-config - type: bind source: /dir target: \u0026#34;/app/.credential\u0026#34;#Here we apply the change by replacing the current mounted drives with the one defined in this fileservices: svc-dev: build: args: \u0026lt;\u0026lt; : *default-args volumes: # Relative paths doesn\u0026#39;t work with WSL and docker for windows *default-volumes svc-test: build: args: \u0026lt;\u0026lt; : *default-args volumes: # Relative paths doesn\u0026#39;t work with WSL and docker for windows *default-volumes svc-codevalidation: build: args: \u0026lt;\u0026lt; : *default-args environment: *default-env  ","description":"Docker compose sample file: network, service definition, .env","id":9,"section":"templates","tags":["docker-compose","docker","network","demo","services","env file"],"title":"Docker Compose - CI/CD Pipeline Generator (Python)","uri":"http://kfrajer.github.io/en/templates/docker/docker-compose/"},{"content":"Instructions Next commands tag an image and run the container locally with the option to mount the source code for live updates\n docker build -t {imageName} . docker run -it --rm --mount type=bind,src=/c/Users/C/workspace/out,dst=/app/publish --name {containerName} {imageName}  Dockerfile content FROM golang:1.14 ENV \\ PRINTING_PRESS_VERSION=\u0026quot;v0.2.0\u0026quot; \\ APPROOT=\u0026quot;/app\u0026quot; \\ OUTFOLDER=\u0026quot;$APPROOT/publish\u0026quot; \\ RECIPIENT_EMAIL=\u0026quot;user@example.com\u0026quot; \\ GITLAB_USER_EMAIL=\u0026quot;user@example.com\u0026quot; \\ SEND_EMAIL_FLAG=true WORKDIR $APPROOT COPY . $APPROOT ##find . -type f -print0 | xargs -0 -n 1 -P 4 dos2unix RUN for i in `find -type f -name \u0026quot;*.sh\u0026quot; -o -name \u0026quot;*.json\u0026quot;`; do sed -i 's/\\r//g' $i; echo \u0026quot;Removing Windows end of line for : $i\u0026quot;; done ##RUN for i in `find editorial/ -type f -name \u0026quot;*.json\u0026quot;`; do sed -i ':a;N;$!ba;s/\\n/ /g' $i; echo \u0026quot;Removing new line character03 in: $i\u0026quot;; done RUN \\ chmod +x scripts/get-template-generator.sh \\ chmod +x scripts/report-gen-cmd.sh \u0026amp;\u0026amp; \\ chmod +x scripts/set-ORGANIZATION-certificates.sh \u0026amp;\u0026amp; \\ scripts/set-ORGANIZATION-certificates.sh \u0026amp;\u0026amp; \\ scripts/get-template-generator.sh ENTRYPOINT [\u0026quot;scripts/report-gen-cmd.sh\u0026quot;] ","description":"Demo dockerfile using GOlang as base image","id":10,"section":"templates","tags":["docker","build","Volumes"],"title":"Dockerfile sample - Report/Printing Press(Go)","uri":"http://kfrajer.github.io/en/templates/docker/dockerfile/"},{"content":"Python Virtual Environment Install Linux  python -m pip install --proxy=http://u:p@proxy-svc-name.com:port --upgrade pip pip install --proxy=http://u:p@proxy-svc-name.com:port virtualenv  Windows To set the python virtualenv in Windows see https://mothergeo-py.readthedocs.io/en/latest/development/how-to/venv-win.html\nAdditional reference from Google GAE  https://cloud.google.com/python/setup https://cloud.google.com/appengine/docs/flexible/python/quickstart  Start environment  For Linux, run the following script to activate the environment using local Python3  1 2 3 4  PY3PATH=$(which python3) ENVNAME=wslenv virtualenv --python=\u0026#34;$PY3PATH\u0026#34; $ENVNAME source \u0026#34;./$ENVNAME/bin/activate\u0026#34;    For Windows  1 2  virtualenv --python C:\\Python37\\python.exe {env_name} .\\{env_name}\\Scripts\\activate   Stop environment Just type: deactivate\n","description":"Python virtual environment best practices","id":11,"section":"development","tags":["Python","virtualenv"],"title":"Python Virtualenv","uri":"http://kfrajer.github.io/en/development/python-virtualenv/"},{"content":"Core JQ commands Doc\u0026rsquo;s main reference: jq Tutorial\nCommands in Docker context  [TBD]  Commands applied to log files  cat {filename} | jq '. | length' : How many entries cat {filename} | jq '. | {name: .appName}' : Displays all appNames in each entry. They are each tagged with name cat {filename} | jq '. | {LEVEL: .logLevel, MSG: .message, EXCEPTION: .exception}' : Demo of multiple mapping cat {filename} | jq '. | select(.exception != null) | {LEVEL: .logLevel, MSG: .message, EXCEPTION: .exception} ' : Selecting demo cat {filename} | jq '. | select(.logLevel == \u0026quot;ERROR\u0026quot;) | {MSG: .message} ' : Selecting demo  ","description":"Pretty formatter for JSON logs","id":12,"section":"development","tags":["jq","json","Formatter","logs"],"title":"Jq","uri":"http://kfrajer.github.io/en/development/jq/"},{"content":"Building a Site: Generation\n*) (Why to setup a static site?)[#]\n*) Install HUGO (Binary+add to PATH)\n*) (Preparing emacs HUGO mode)[#]\n*) (First Site: Design Layout)[#]\n*) (Git setup)[#, Ref]\n*) Theme selection\n*) First post!\n*) (Emal setup as a web service)[#]\nBuilding a Site: Deployment\n*) Brand name selection: namechk.com\n*) Web hosting services: GitHub, https://www.nearlyfreespeech.net/, atspace.cc, AWS, Heroku, Digital Ocean (VPS)\nWeb hosting services\nSetting up page hosting using (GitHub)[https://gohugo.io/hosting-and-deployment/hosting-on-github/].\nYou will need to decide if you are hosting a page specifically for a project or for a user/organization sie. I am choosing the later.\nThe steps to follow are:\n*) Go to github and register using a valid account\n*) Name repo kfrajer.github.io\nBusiness Consideration\n*) Branding and logo\n*) Copyright\n*) Business cards\nWhy to setup a static site?\nHugo\nJekyll (MUO)\nGitHub\nvs. WordPress (MUO, Traversy Media)\nFirst Site: Design Layout\n*) Experience and Personal Interests\n*) Projects\n*) Blog posts\n*) Code Recipes\n*) Reference links\n*) About\n*) Contact\nUnderstanding Licenses\nGPL\nMIT\nHUGO setup details\n*) cd C:/mySandBox/DockerSpace/Hugo/kfrajer-hugo/\no) vist https://github.com/gohugoio/hugo/releases/ and select version for ubuntu/debian, download it.\no) sudo apt install /c/Users/C/Downloads/hugo_0.71.1_Linux-64bit.deb\no) hugo version ## v0.71.1\n*) mkdir kfrajer.github.io\n*) hugo new site .\n*) git init\n*) git config \u0026ndash;global user.name \u0026ldquo;kfrajer\u0026rdquo;\n*) git config \u0026ndash;global user.email krisfrajer@gmail.com\n*) git config \u0026ndash;global core.autocrlf true\n*) git config \u0026ndash;global merge.tool meld\n*) git config \u0026ndash;global mergetool.meld.cmd \u0026ldquo;meld $LOCAL $MERGED $REMOTE \u0026ndash;output $MERGED\u0026rdquo;\n*) git submodule add https://github.com/zzossig/hugo-theme-zzo.git themes/zzo\n*) ALSO WHEN NEEDED: git submodule update --remote --merge\n*) Follow quick start for this theme\n*) First: Check example site works:\n-) cd themes/zzo/exampleSite\n-) hugo server\n*) Then copy config, content, rsources and static to root\n-) hugo new \u0026lt;SECTIONNAME\u0026gt;/\u0026lt;FILENAME\u0026gt;.\u0026lt;FORMAT\u0026gt; to add new content\n*) other themes of interest:\n-) Intro to themes: https://www.youtube.com/watch?v=hBQlCtfRmqs\u0026amp;list=PL-Kz5P-mYdMgAJDmRJquyMHfdaIOD-3oj\u0026amp;index=4\n-) DOCS:\n-) https://themes.gohugo.io/hugo-theme-techdoc/\n-) https://themes.gohugo.io/ace-documentation/\n-) https://themes.gohugo.io/hugo-theme-zdoc/ ***\n-) https://themes.gohugo.io/hugo-theme-zzo/ ***\n-) https://themes.gohugo.io/beautifulhugo/\n-) https://themes.gohugo.io/hugo-theme-prav/\n-) PROFILE\n-) https://themes.gohugo.io/hugo-devresume-theme/\n-) https://themes.gohugo.io/hugo-orbit-theme/\n-) SHOWCASE\n-) https://themes.gohugo.io/hugo-theme-bootstrap4-blog/\n-) https://themes.gohugo.io/hugo-book/\n-) https://themes.gohugo.io/hugo-cards/\n-) https://themes.gohugo.io/strange-case/\n-) https://themes.gohugo.io/binario/\n-) https://themes.gohugo.io/midnight/\n-) https://themes.gohugo.io/hugo-primer/\n-) OTHERS\n-) Alabaster, Hugof, SP Minimal\n-) Hyde Hyde, After Dark, Main Road\n-) Blog ==\u0026gt; Geppaku, Twenty Fourteen\n-) CV==\u0026gt; Academic, Agency\n-) Titles==\u0026gt; Hestia Pure, Nederburg, Tracks, Hugo Future Imperfect, Robust\n-) Hugo Bootstrap V4, Kraiklyn, Blackburn\n-) Code Editor, Wave, Hyde, Docu API, Strange Case, Liquorice, Theme Hugo Foundation6\n-) Load via hugo server\n-) https://gohugo.io/ for quickstart guide and docs\nx) Note that config.toml file has this line theme = \u0026quot;zzo\u0026quot;\n#) hugo new post/welcome.md \u0026lt;===https://www.youtube.com/watch?v=w7Ft2ymGmfc\n+) echo \u0026quot; #Wecome to kfrajer.github.src\u0026rdquo; \u0026raquo; README.md\n+) git add .\n+) git commit -m \u0026ldquo;Hugo base template init\u0026rdquo;\n+) git remote add origin https://github.com/kfrajer/kfrajer.github.src.git\n+) git push -u origin master\no) hugo new Development/git.md\nhugo new Development/docker.md\no) Modified content/index.md \u0026lt;=== FROM https://github.com/digitalcraftsman/hugo-alabaster-theme/tree/master/exampleSite/content\no) Modified content/post/welcome.md\no) git add .\no) git commit -m \u0026ldquo;Added my first few posts: index in content, welcome in content/post. Added homepage tag and remove draft parameter on md header\u0026rdquo;\no) hugo serve -w \u0026lt;=== WORKS!\no) hugo -d published \u0026lt;=== builds html/css/js to deploy\no) Create .gitignore and add the folder above: published/**\nTEST: http://localhost:1313\nTEST: http://localhost:1313/post/welcome/\no) git push -u origin master\nx) git fetch origin\nx) git status\n*) hugo new \u0026lt;FILENAME\u0026gt;.\n*) hugo serve\n","description":"Steps to create this site","id":13,"section":"development","tags":["Hugo","static-generator","web","Golang"],"title":"Building a Hugo Page","uri":"http://kfrajer.github.io/en/development/cr_buidling_static_site/"},{"content":"Core Docker commands  docker ps -a docker run --rm -it --name {containerName} {imageName} docker logs -f {containerName}: Continuos logs docker exec -it {containerName} {cmd-to-execute} alias ccx='f(){ [ -n \u0026quot;$1\u0026quot; ] \u0026amp;\u0026amp; docker exec -it \u0026quot;$1\u0026quot; /bin/bash; unset -f f; }; : Creates bash session in running container docker build -t {imageTag} . docker build -t {imageTag} -f {DockerfileName} . : Context set to current folder docker run -it --rm --mount type=bind,src=/c/Users/USR/Documents/folder,dst=/app/publish --name {appName} {imagetag}  Pretty docker status reporting commands 1 2 3 4 5 6 7 8  Yellow=\u0026#39;\\033[0;33m IRed=\u0026#39;\\033[0;91m\u0026#39; IBlue=\u0026#39;\\033[0;94m\u0026#39; NC=\u0026#39;\\033[0m\u0026#39; echo -e \u0026#34;$(docker ps --format \u0026#34;${Yellow}{{.Names}}${NC}\\n\\tStatus:${IRed}{{.Status}}${NC}\\n\\t${IBlue}Container ID:${NC}{{.ID}}\\t${IBlue}Command:${NC}{{.Command}}\\n\\t${IBlue}Image:${NC}{{.Image}}\u0026#34; )\u0026#34; VVBODY=\u0026#34;$(docker ps -a --format \u0026#34;${IRed}{{.Status}}${NC},${Yellow}{{.Names}}${NC}, {{.ID}} , {{.CreatedAt}}\u0026#34; )\u0026#34;; echo -e \u0026#34;$VVBODY\u0026#34; | column -t -s, echo -e \u0026#34;$(docker ps -a --format \u0026#34;${Yellow}{{.Names}}${NC}\\n\\tStatus:${IRed}{{.Status}}${NC}\\n\\t${IBlue}Container ID:${NC}{{.ID}}\\t${IBlue}Command:${NC}{{.Command}}\\n\\t${IBlue}Image:${NC}{{.Image}}\\n\\t${IBlue}CreatedAt:${NC}{{.CreatedAt}}\u0026#34; )\u0026#34; VVHEAD=\u0026#34;${Black}${On_White}\\tSTATUS,CONTAINER-ID,CMD,IMAGE,CREATED AT${NC}\u0026#34;;VVBODY=\u0026#34;$(docker ps -a --format \u0026#34;${Yellow}{{.Names}}${NC}\\n\\t${IRed}{{.Status}}${NC}, {{.ID}} , {{.Command}} , {{.Image}} , {{.CreatedAt}}\u0026#34; )\u0026#34;;echo -e \u0026#34;$VVHEAD\\n$VVBODY\u0026#34; | column -t -s,   Housekeeping  docker inspect {containerName} docker rm $(docker ps -a -q) [ -n \u0026quot;$(docker ps -a -q)\u0026quot; ] \u0026amp;\u0026amp; echo \u0026quot;Removing idle containers\u0026quot; \u0026amp;\u0026amp; docker rm $(docker ps -q -f \u0026quot;status=exited\u0026quot;) docker rmi $(docker images | awk '{print $3}') docker rmi $(docker images | grep \u0026quot;\u0026lt;none\u0026gt;\u0026quot; | awk '{print $3}') docker images prune docker images ls docker volumes prune docker volumes ls docker network ls docker network rm {name}  Core docker-compose commands  docker-compose up --build docker-compose --verbose up --build -d docker-compose down docker-compose -f file01.yml -f file02.yml up docker-compose run {serviceName} docker-compose stop \u0026amp;\u0026amp; docker-compose rm -f \u0026quot;\u0026quot;: Removes only the containers. It doe snot remove volumes or network adapters f(){ docker-compose stop \u0026quot;$@\u0026quot; \u0026amp;\u0026amp; docker-compose rm -f \u0026quot;$@\u0026quot;; unset -f f; }; f : To be used in a bash function  Other commands  export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}'):0 export DOCKER_HOST='tcp://localhost:2375' export DOCKER_HOST=unix:///var/run/docker.sock  ","description":"Core Docker commands for development in Linux","id":14,"section":"development","tags":["Docker","Docker-compose","Linux","WSL","Cheatsheet"],"title":"Docker Knowlegde Base","uri":"http://kfrajer.github.io/en/development/docker/"},{"content":"Core Git commands Git init  git init git config --global user.name \u0026quot;username\u0026quot; git config --global user.email user@mail.com git config --global core.autocrlf true git config --global merge.tool meld git config --global mergetool.meld.cmd \u0026quot;meld \\$LOCAL \\$MERGED \\$REMOTE --output \\$MERGED\u0026quot; Need to set git token to pull/push using SSH strategy isntead of HTTP  General  git status git status -s: Minimum output, s for short git rev-parse --abbrev-ref HEAD: Current branch name git branch -a: List all branches git checkout {branch-name} git checkout -b {branch-name}: create branch and switch into it  Push and pull  git remote -v git remote rm {nameRemote} git remote add {nameRemote} {ssh:git_url} git fetch {branch-name}: Bring changes but do not merge them git add {fileName01} {fileName02} ... {fileName0N} git commit -m \u0026quot;Commit msg here\u0026quot; git push  or  git push --set-upstream {upstream-ref} {which-branch}  Reporting  git rev-parse --abbrev-ref HEAD: Current branch name git log --pretty=oneline git diff {branch1}..{branch2} git diff {fileName}  Stash  git stash git stash pop git stash list git stash show: Show top files modified in the top stash git stash show -p: Shows actual file changes as a difference of to stash with current branch  Amend  git commit --amend -m {new-commit-message} git commit -amend ## Opens vi to edit commit msg. Type a for append. When done, press ESC then press : and type wq meaning write and exit git cherry-pick {commitID01} {commitID02} ... {commitID0N} git rebase -i {commit-id-to-start-from}: squash, fix commits, order commits, drop commits git reset HEAD: Reset unstaging changes (Reset \u0026ldquo;git add {\u0026hellip;}\u0026quot;) git reset HEAD^: Branch reset - reset last commit, move head to previous commit git config --global alias.uncommit 'reset HEAD^': Use this as git uncommit git reset HEAD {file}: Unstage the file but maintain the modifications git checkout -- {file}: Revert a file back to the state it was in before any changes Rebasing commits from master into current branch  1 2 3 4 5 6 7 8 9 10 11 12  # master(public): c1 - c37 # feaure(mine): c1 - c2 - c3 - [...] - c36 git checkout {master-br-name} git rebase {master-br-name} {feature-br-name} # Final: c1 - c37 - c2 - c3 - [...] - c36 # Branch changed here would be the feature branch (aka current branch at the end is \u0026#34;feature\u0026#34; branch) # If conflict arises, rebase will stop and indicate where the conflict is (what file) # - Resolve conflict using emacs: # - Remove conflict indicators # - Choose/amend changes to desired behavior # - Save file and exit # - `git rebase --continue`: It will continue rebase operation   Housekeeping  git branch -D {branchName}: Removes branch even if it has not been pushed git branch -m {oldName} {newName}: Rename branch git mv {oldFileName} {newFileName} GIT_TRACE_PERFORMANCE=1 git status: To get a report in git ops and their performance  Git submodule  git submodule add {URL-Repo}.git {folder} git submodule update --remote --merge git submodule update --init --recursive  ","description":"Summary of core Git commands for development","id":15,"section":"development","tags":["git","git flow","version control","Cheatsheet"],"title":"Git","uri":"http://kfrajer.github.io/en/development/git/"},{"content":"This site\u0026rsquo;s main goal is to act as a knowledge base for code development in the are of\n Web developmnet CI/CD pipeline design Cloud technologies Essential commands, references and playbooks This is complemented with resources publicly available in public repos as well as using internally (private) online storage solutions  Questions or comments Please use either of the following methods\n Contact me directly at krisfrajer@gmail.com If there is an issue with the site or comments, please create aGithub issue here Contact me directly by filling out the form below  TBD    ","description":"Knowledge base \u0026 Playbooks","id":16,"section":"","tags":null,"title":"About","uri":"http://kfrajer.github.io/en/about/"}]