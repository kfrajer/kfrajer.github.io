<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>PlayBooks</title>
    <link>http://kfrajer.github.io/en/</link>
    <description>Recent content on PlayBooks</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>krisfrajer@gmail.com (krisfrajer)</managingEditor>
    <webMaster>krisfrajer@gmail.com (krisfrajer)</webMaster>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Sun, 19 Jul 2020 11:44:27 -0400</lastBuildDate>
    
        <atom:link href="http://kfrajer.github.io/en/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      

      
      <item>
        <title>Html Core</title>
        <link>http://kfrajer.github.io/en/templates/html-core/</link>
        <pubDate>Thu, 04 Jun 2020 17:46:12 -0400</pubDate>
        <author>krisfrajer@gmail.com (krisfrajer)</author>
        <atom:modified>Thu, 04 Jun 2020 17:46:12 -0400</atom:modified>
        <guid>http://kfrajer.github.io/en/templates/html-core/</guid>
        <description>&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width,initial-scale=1&amp;#34;&amp;gt; &amp;lt;title&amp;gt;The HTML5 Herald&amp;lt;/title&amp;gt; &amp;lt;meta name=&amp;#34;description&amp;#34; content=&amp;#34;The HTML5 Content&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;author&amp;#34; content=&amp;#34;SitePoint&amp;#34;&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;css/styles.css?v=1.0&amp;#34;&amp;gt; &amp;lt;script src=&amp;#34;https://www.gstatic.com/firebasejs/7.14.6/firebase-app.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/npm/p5@0.10.2/lib/p5.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/npm/p5@0.10.2/lib/addons/p5.sound.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;#34;js/scripts.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; Form template  Credits: https://github.com/siwalikm/quick-form-css/blob/master/demoForm.html  &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width,initial-scale=1&amp;#34;&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;qfc-dark.css&amp;#34;&amp;gt; &amp;lt;!-- &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;qfc-light.css&amp;#34;&amp;gt; --&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div class=&amp;#34;qfc-container&amp;#34;&amp;gt; &amp;lt;h2&amp;gt;Form Title&amp;lt;/h2&amp;gt; &amp;lt;label&amp;gt;Description of Lorem ipsum dolor sit amet, consectetur adipiscing elit.</description>
        
        <dc:creator>Cristian Mosquera</dc:creator>
        
        
        
        
          
            
              <category>HTML</category>
            
          
            
              <category>CSS</category>
            
          
            
              <category>JS</category>
            
          
            
              <category>Web-page</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Handy_links</title>
        <link>http://kfrajer.github.io/en/development/handy_links/</link>
        <pubDate>Wed, 03 Jun 2020 22:51:34 -0400</pubDate>
        <author>krisfrajer@gmail.com (krisfrajer)</author>
        <atom:modified>Wed, 03 Jun 2020 22:51:34 -0400</atom:modified>
        <guid>http://kfrajer.github.io/en/development/handy_links/</guid>
        <description>My sites  https://kfrajer.github.io http://devhugo.atspace.cc/en/index.html http://krisfrajer.atspace.cc/drdcsurvey/location.php?get=demo http://krisfrajer.atspace.cc/drdcsurvey/cgi-bin/demo3.pl http://www.bluelion.site/mem.php?top- readapps.xyz silverowl.biz: Expires June 6th 2021 krisfrajer.dev GCP: data4good, headless chrome, contact form https://data4good.uc.r.appspot.com/ /admin /hidden  Android  GPS map Blinking LEDs pwd-encoder-vX Model-Timer Stef-15  Reference - development  TMUX cheatsheet: https://www.hostinger.com/tutorials/tmux-beginners-guide-and-cheat-sheet/ Hugo themes:  https://themes.gohugo.io/hugo-theme-zzo/ https://themes.gohugo.io/hugo-theme-zdoc/   Emacs: http://ergoemacs.org/emacs/emacs.html GOlang tutorial: https://gocloud.dev/tutorials gRPC: https://www.grpc.io/docs/what-is-grpc/core-concepts/ Internet X.509 PKI CA and CRL: https://tools.ietf.org/html/rfc5280  References - Other  French modules: https://learn.</description>
        
        <dc:creator>Cristian Mosquera</dc:creator>
        
        
        
        
          
            
              <category>my-sites</category>
            
          
            
              <category>reference</category>
            
          
            
              <category>cheatsheets</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Setup Docker in Wsl</title>
        <link>http://kfrajer.github.io/en/development/setup-docker-in-wsl/</link>
        <pubDate>Sat, 30 May 2020 19:50:05 -0400</pubDate>
        <author>krisfrajer@gmail.com (krisfrajer)</author>
        <atom:modified>Sat, 30 May 2020 19:50:05 -0400</atom:modified>
        <guid>http://kfrajer.github.io/en/development/setup-docker-in-wsl/</guid>
        <description>Installing Docker in Windows Subsystem Linux (WSL) NOTES  After ssummer 2020, you need to have WSL2 which is made available for Windows 10 Home edition It is recommended to upgrade to Windows 10 Pro In &amp;ldquo;Turn Windows features on and off&amp;rdquo;, check &amp;ldquo;Windows Hypervisor Platform&amp;rdquo; To be confirmed, check &amp;ldquo;Hyper-V&amp;rdquo;? Currently working but this is not checked. To investigate&amp;hellip; Finally, install &amp;ldquo;Docker Destop&amp;rdquo; and ensure the docker-machine is up and running.</description>
        
        <dc:creator>Cristian Mosquera</dc:creator>
        
        
        
        
          
            
              <category>Docker</category>
            
          
            
              <category>WSL</category>
            
          
            
              <category>Cheatsheet</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Docker Cpp Memory Demo</title>
        <link>http://kfrajer.github.io/en/development/docker-cpp-mem-demo/</link>
        <pubDate>Sat, 30 May 2020 18:11:25 -0400</pubDate>
        <author>krisfrajer@gmail.com (krisfrajer)</author>
        <atom:modified>Sat, 30 May 2020 18:11:25 -0400</atom:modified>
        <guid>http://kfrajer.github.io/en/development/docker-cpp-mem-demo/</guid>
        <description>Memory analysis using docker  Reference: https://github.com/CppMtl/Meetups/tree/master/2020/2020-02-27%20%5BGabriel%20Aubut-Lussier%5D%20Memory%20analysis  Roadmap 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58  docker run --rm -it ubuntu ls /proc ls /proc/1 bash cat /proc/1/stack docker run --privileged --rm -it ubuntu cat /proc/1/stack less /proc/1/smaps apt-get install less less /proc/1/maps Virtual memory Different binary sections Different permissions [heap] Shared libraries (libc, terminfo, dynamic linker) Anonymous zones [stack] [vvar], [vdso], [vsyscall] less /proc/1/smaps Rss Pss Shared_* Private_* VmFlags less /proc/1/smaps_rollup less /proc/1/map_files/* less /proc/1/oom_score less /proc/1/status Vm* pushd /home/01-programme-vide g++ main.</description>
        
        <dc:creator>Cristian Mosquera</dc:creator>
        
        
        
        
          
            
              <category>docker</category>
            
          
            
              <category>c&#43;&#43;</category>
            
          
            
              <category>Memory analysis</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Git Flow - Feature branch</title>
        <link>http://kfrajer.github.io/en/development/git-flow-fbranch/</link>
        <pubDate>Sat, 30 May 2020 18:11:04 -0400</pubDate>
        <author>krisfrajer@gmail.com (krisfrajer)</author>
        <atom:modified>Sat, 30 May 2020 18:11:04 -0400</atom:modified>
        <guid>http://kfrajer.github.io/en/development/git-flow-fbranch/</guid>
        <description>Git flow  Set git for the first time:  E-mail, name, crlf line termination handling git init git config &amp;ndash;global user.name &amp;ldquo;kfrajer&amp;rdquo; git config &amp;ndash;global user.email krisfrajer@gmail.com git config &amp;ndash;global core.autocrlf true git config &amp;ndash;global merge.tool meld git config &amp;ndash;global mergetool.meld.cmd &amp;ldquo;meld $LOCAL $MERGED $REMOTE &amp;ndash;output $MERGED&amp;rdquo; Set git token   git clone repo(s) locally Create a branch with named either feature(s)/{feature-name}, bugfix/{issue-name} or mayor/{name}  git checkout -b {purpose}/{name}   Perform changes, add unit/system/integration tests Commit often Push upstream to origin.</description>
        
        <dc:creator>Cristian Mosquera</dc:creator>
        
        
        
        
          
            
              <category>Git</category>
            
          
            
              <category>Cheatsheet</category>
            
          
            
              <category>Git flow</category>
            
          
            
              <category>version control</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Makefile</title>
        <link>http://kfrajer.github.io/en/templates/makefile/</link>
        <pubDate>Sat, 30 May 2020 18:10:09 -0400</pubDate>
        <author>krisfrajer@gmail.com (krisfrajer)</author>
        <atom:modified>Sat, 30 May 2020 18:10:09 -0400</atom:modified>
        <guid>http://kfrajer.github.io/en/templates/makefile/</guid>
        <description>Makefile: Newsletter/Printing Press Template (Go) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72  .</description>
        
        <dc:creator>Cristian Mosquera</dc:creator>
        
        
        
        
          
            
              <category>c&#43;&#43;</category>
            
          
            
              <category>make</category>
            
          
            
              <category>Makefile</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Dockerfile Multistage - Newsletter/PrintingPress (Go)</title>
        <link>http://kfrajer.github.io/en/templates/docker/dockerfile-multistage/</link>
        <pubDate>Sat, 30 May 2020 18:09:54 -0400</pubDate>
        <author>krisfrajer@gmail.com (krisfrajer)</author>
        <atom:modified>Sat, 30 May 2020 18:09:54 -0400</atom:modified>
        <guid>http://kfrajer.github.io/en/templates/docker/dockerfile-multistage/</guid>
        <description>############### # FROM buildpack-deps:buster-curl as certGetter ## Copy from src to dest, load to base and outputed in master ENV SRC_CERT=ORGANIZATION \ DEST_CERT=/usr/share/ca-certificates/ORGANIZATION \ BASE_CERT=/etc/ca-certificates.conf \ MASTER_CERT_FILE=/etc/ssl/certs WORKDIR app/ COPY . . RUN mkdir -p $DEST_CERT &amp;amp;&amp;amp; cp -f $SRC_CERT/* $DEST_CERT/ &amp;amp;&amp;amp; \ for i in `find ${SRC_CERT} -type f -name &amp;quot;*.crt&amp;quot;`; do echo $i &amp;gt;&amp;gt; $BASE_CERT; echo &amp;quot;Loading $i into $BASE_CERT&amp;quot;; done &amp;amp;&amp;amp; \ echo &amp;quot;Calling update-ca-certificates...&amp;quot; &amp;amp;&amp;amp; update-ca-certificates ONBUILD RUN echo -e &amp;quot;\nFinish executing loading\n\nCertGetter\n\nNext step.</description>
        
        <dc:creator>Cristian Mosquera</dc:creator>
        
        
        
        
          
            
              <category>docker</category>
            
          
            
              <category>build</category>
            
          
            
              <category>Multistage</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>P5JS HTML Bundle</title>
        <link>http://kfrajer.github.io/en/templates/processing/p5js-html-bundle/</link>
        <pubDate>Sat, 30 May 2020 18:09:26 -0400</pubDate>
        <author>krisfrajer@gmail.com (krisfrajer)</author>
        <atom:modified>Sat, 30 May 2020 18:09:26 -0400</atom:modified>
        <guid>http://kfrajer.github.io/en/templates/processing/p5js-html-bundle/</guid>
        <description>P5js Template: Loading local p5.js script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width,initial-scale=1&amp;#34;&amp;gt; &amp;lt;title&amp;gt;Demo P5.js&amp;lt;/title&amp;gt; &amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/npm/p5@0.10.2/lib/p5.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/npm/p5@0.10.2/lib/addons/p5.sound.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;#34;sketch.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;   P5js Template: Embedded p5.js script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  &amp;lt;!</description>
        
        <dc:creator>Cristian Mosquera</dc:creator>
        
        
        
        
          
            
              <category>Processing</category>
            
          
            
              <category>js</category>
            
          
            
              <category>Javascript</category>
            
          
            
              <category>p5js</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Processing-java</title>
        <link>http://kfrajer.github.io/en/templates/processing/processing-java/</link>
        <pubDate>Sat, 30 May 2020 18:09:26 -0400</pubDate>
        <author>krisfrajer@gmail.com (krisfrajer)</author>
        <atom:modified>Sat, 30 May 2020 18:09:26 -0400</atom:modified>
        <guid>http://kfrajer.github.io/en/templates/processing/processing-java/</guid>
        <description>Processing Template for New Sketches 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58  //REFERENCES: //REFERENCES: //REFERENCES:  //INSTRUCTIONS: // *-- // *-- // *-- // *--  //=========================================================================== // IMPORTS:  //=========================================================================== // FINAL FIELDS:  //=========================================================================== // GLOBAL VARIABLES:  //=========================================================================== // PROCESSING DEFAULT FUNCTIONS:  void settings(){ size(400,600); } void setup(){ textAlign(CENTER,CENTER); rectMode(CENTER); fill(255); strokeWeight(2); } void draw(){ background(0); } void keyReleased(){ } void mouseReleased(){ } //=========================================================================== // OTHER FUNCTIONS:    </description>
        
        <dc:creator>Cristian Mosquera</dc:creator>
        
        
        
        
          
            
              <category>Processing</category>
            
          
            
              <category>Java</category>
            
          
            
              <category>P3</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Docker Compose - CI/CD Pipeline Generator (Python)</title>
        <link>http://kfrajer.github.io/en/templates/docker/docker-compose/</link>
        <pubDate>Sat, 30 May 2020 18:08:28 -0400</pubDate>
        <author>krisfrajer@gmail.com (krisfrajer)</author>
        <atom:modified>Sat, 30 May 2020 18:08:28 -0400</atom:modified>
        <guid>http://kfrajer.github.io/en/templates/docker/docker-compose/</guid>
        <description>Overview In this section you find sample docker-compose files that allows to run a master-slave service. One service defines a custom bridge network, the second connects to this network. In addition, there is a demo of overriding a docker-compose file using another docker-compose file. Finally, you find handy commands to debug docker containers and a sample .env file.
Handy commands for debugging  Shows all running containers: docker ps -a Removes idle stopped containers: docker rm $(docker ps -q -f &amp;quot;status=exited&amp;quot;) See logs from container (name as displayed in docker ps): docker logs -f {containerName} Create bash session in a running container: docker exec -it {containerName} /bin/bash To explore/beautify logs in container and extract loglevel and message and assign it to LEVEL and MSG resp.</description>
        
        <dc:creator>Cristian Mosquera</dc:creator>
        
        
        
        
          
            
              <category>docker-compose</category>
            
          
            
              <category>docker</category>
            
          
            
              <category>network</category>
            
          
            
              <category>demo</category>
            
          
            
              <category>services</category>
            
          
            
              <category>env file</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Dockerfile sample - Report/Printing Press(Go)</title>
        <link>http://kfrajer.github.io/en/templates/docker/dockerfile/</link>
        <pubDate>Sat, 30 May 2020 18:08:14 -0400</pubDate>
        <author>krisfrajer@gmail.com (krisfrajer)</author>
        <atom:modified>Sat, 30 May 2020 18:08:14 -0400</atom:modified>
        <guid>http://kfrajer.github.io/en/templates/docker/dockerfile/</guid>
        <description>Instructions Next commands tag an image and run the container locally with the option to mount the source code for live updates
 docker build -t {imageName} . docker run -it --rm --mount type=bind,src=http://kfrajer.github.io/c/Users/C/workspace/out,dst=/app/publish --name {containerName} {imageName}  Dockerfile content FROM golang:1.14 ENV \ PRINTING_PRESS_VERSION=&amp;quot;v0.2.0&amp;quot; \ APPROOT=&amp;quot;/app&amp;quot; \ OUTFOLDER=&amp;quot;$APPROOT/publish&amp;quot; \ RECIPIENT_EMAIL=&amp;quot;user@example.com&amp;quot; \ GITLAB_USER_EMAIL=&amp;quot;user@example.com&amp;quot; \ SEND_EMAIL_FLAG=true WORKDIR $APPROOT COPY . $APPROOT ##find . -type f -print0 | xargs -0 -n 1 -P 4 dos2unix RUN for i in `find -type f -name &amp;quot;*.</description>
        
        <dc:creator>Cristian Mosquera</dc:creator>
        
        
        
        
          
            
              <category>docker</category>
            
          
            
              <category>build</category>
            
          
            
              <category>Volumes</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Python Virtualenv</title>
        <link>http://kfrajer.github.io/en/development/python-virtualenv/</link>
        <pubDate>Sat, 30 May 2020 18:00:56 -0400</pubDate>
        <author>krisfrajer@gmail.com (krisfrajer)</author>
        <atom:modified>Sat, 30 May 2020 18:00:56 -0400</atom:modified>
        <guid>http://kfrajer.github.io/en/development/python-virtualenv/</guid>
        <description>Python Virtual Environment Install Linux  python -m pip install --proxy=http://u:p@proxy-svc-name.com:port --upgrade pip pip install --proxy=http://u:p@proxy-svc-name.com:port virtualenv  Windows To set the python virtualenv in Windows see https://mothergeo-py.readthedocs.io/en/latest/development/how-to/venv-win.html
Additional reference from Google GAE  https://cloud.google.com/python/setup https://cloud.google.com/appengine/docs/flexible/python/quickstart  Start environment  For Linux, run the following script to activate the environment using local Python3  1 2 3 4  PY3PATH=$(which python3) ENVNAME=wslenv virtualenv --python=&amp;#34;$PY3PATH&amp;#34; $ENVNAME source &amp;#34;./$ENVNAME/bin/activate&amp;#34;    For Windows  1 2  virtualenv --python C:\Python37\python.</description>
        
        <dc:creator>Cristian Mosquera</dc:creator>
        
        
        
        
          
            
              <category>Python</category>
            
          
            
              <category>virtualenv</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Jq</title>
        <link>http://kfrajer.github.io/en/development/jq/</link>
        <pubDate>Sat, 30 May 2020 18:00:31 -0400</pubDate>
        <author>krisfrajer@gmail.com (krisfrajer)</author>
        <atom:modified>Sat, 30 May 2020 18:00:31 -0400</atom:modified>
        <guid>http://kfrajer.github.io/en/development/jq/</guid>
        <description>Core JQ commands Doc&amp;rsquo;s main reference: jq Tutorial
Commands in Docker context  [TBD]  Commands applied to log files  cat {filename} | jq &#39;. | length&#39; : How many entries cat {filename} | jq &#39;. | {name: .appName}&#39; : Displays all appNames in each entry. They are each tagged with name cat {filename} | jq &#39;. | {LEVEL: .logLevel, MSG: .message, EXCEPTION: .exception}&#39; : Demo of multiple mapping cat {filename} | jq &#39;.</description>
        
        <dc:creator>Cristian Mosquera</dc:creator>
        
        
        
        
          
            
              <category>jq</category>
            
          
            
              <category>json</category>
            
          
            
              <category>Formatter</category>
            
          
            
              <category>logs</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Building a Hugo Page</title>
        <link>http://kfrajer.github.io/en/development/cr_buidling_static_site/</link>
        <pubDate>Sat, 30 May 2020 17:29:59 -0400</pubDate>
        <author>krisfrajer@gmail.com (krisfrajer)</author>
        <atom:modified>Sat, 30 May 2020 17:29:59 -0400</atom:modified>
        <guid>http://kfrajer.github.io/en/development/cr_buidling_static_site/</guid>
        <description>Building a Site: Generation
*) (Why to setup a static site?)[#]
*) Install HUGO (Binary+add to PATH)
*) (Preparing emacs HUGO mode)[#]
*) (First Site: Design Layout)[#]
*) (Git setup)[#, Ref]
*) Theme selection
*) First post!
*) (Emal setup as a web service)[#]
Building a Site: Deployment
*) Brand name selection: namechk.com
*) Web hosting services: GitHub, https://www.nearlyfreespeech.net/, atspace.cc, AWS, Heroku, Digital Ocean (VPS)
Web hosting services
Setting up page hosting using (GitHub)[https://gohugo.</description>
        
        <dc:creator>Cristian Mosquera</dc:creator>
        
        
        
        
          
            
              <category>Hugo</category>
            
          
            
              <category>static-generator</category>
            
          
            
              <category>web</category>
            
          
            
              <category>Golang</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Docker Knowlegde Base</title>
        <link>http://kfrajer.github.io/en/development/docker/</link>
        <pubDate>Sat, 30 May 2020 17:29:59 -0400</pubDate>
        <author>krisfrajer@gmail.com (krisfrajer)</author>
        <atom:modified>Sat, 30 May 2020 17:29:59 -0400</atom:modified>
        <guid>http://kfrajer.github.io/en/development/docker/</guid>
        <description>Core Docker commands  docker ps -a docker run --rm -it --name {containerName} {imageName} docker logs -f {containerName}: Continuos logs docker exec -it {containerName} {cmd-to-execute} alias ccx=&#39;f(){ [ -n &amp;quot;$1&amp;quot; ] &amp;amp;&amp;amp; docker exec -it &amp;quot;$1&amp;quot; /bin/bash; unset -f f; }; : Creates bash session in running container docker build -t {imageTag} . docker build -t {imageTag} -f {DockerfileName} . : Context set to current folder docker run -it --rm --mount type=bind,src=http://kfrajer.github.io/c/Users/USR/Documents/folder,dst=/app/publish --name {appName} {imagetag}  Pretty docker status reporting commands 1 2 3 4 5 6 7 8  Yellow=&amp;#39;\033[0;33m IRed=&amp;#39;\033[0;91m&amp;#39; IBlue=&amp;#39;\033[0;94m&amp;#39; NC=&amp;#39;\033[0m&amp;#39; echo -e &amp;#34;$(docker ps --format &amp;#34;${Yellow}{{.</description>
        
        <dc:creator>Cristian Mosquera</dc:creator>
        
        
        
        
          
            
              <category>Docker</category>
            
          
            
              <category>Docker-compose</category>
            
          
            
              <category>Linux</category>
            
          
            
              <category>WSL</category>
            
          
            
              <category>Cheatsheet</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Git</title>
        <link>http://kfrajer.github.io/en/development/git/</link>
        <pubDate>Sat, 30 May 2020 17:25:33 -0400</pubDate>
        <author>krisfrajer@gmail.com (krisfrajer)</author>
        <atom:modified>Sat, 30 May 2020 17:25:33 -0400</atom:modified>
        <guid>http://kfrajer.github.io/en/development/git/</guid>
        <description>Core Git commands Git init  git init git config --global user.name &amp;quot;username&amp;quot; git config --global user.email user@mail.com git config --global core.autocrlf true git config --global merge.tool meld git config --global mergetool.meld.cmd &amp;quot;meld \$LOCAL \$MERGED \$REMOTE --output \$MERGED&amp;quot; Need to set git token to pull/push using SSH strategy isntead of HTTP  General  git status git status -s: Minimum output, s for short git rev-parse --abbrev-ref HEAD: Current branch name git branch -a: List all branches git checkout {branch-name} git checkout -b {branch-name}: create branch and switch into it  Push and pull  git remote -v git remote rm {nameRemote} git remote add {nameRemote} {ssh:git_url} git fetch {branch-name}: Bring changes but do not merge them git add {fileName01} {fileName02} .</description>
        
        <dc:creator>Cristian Mosquera</dc:creator>
        
        
        
        
          
            
              <category>git</category>
            
          
            
              <category>git flow</category>
            
          
            
              <category>version control</category>
            
          
            
              <category>Cheatsheet</category>
            
          
        
        
        
      </item>
      

    
  </channel>
</rss>